{
	"id": "f652acca8d5fa33e90af3c53c1aa26c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\ncontract MyContract{\n\n    //create a structure ticket\n    struct Ticket {\n        address buyer;\n        uint numbers;\n        uint powerball;\n    }\n\n    address[] users; //user list\n    Ticket[] tickets; //user's tickets\n    bool active; //true if a round is active, false otherwise\n    address lottery_manager;\n    uint ticket_price = 1000000000000000000; //1 eth\n\n    constructor() public payable{\n       active = true;\n       lottery_manager = msg.sender;\n    }\n\n    function startNewRound() public{\n        require(lottery_manager == msg.sender);\n        if(active == false)\n        {\n            active = true;\n        }\n    }\n\n    function buy(uint _numbers, uint _powerball) public payable{\n\n        //check if the round is active\n        require(active == true, \"Lottery closed\");\n        \n        //check if the value is enough to buy a ticket\n        uint money = msg.value;\n        require(money >= ticket_price, \"Value too small\");\n\n        //check if the numbers are ok\n\n        //create an istance of ticket type\n        Ticket memory ticket = Ticket({buyer : msg.sender, numbers : _numbers, powerball : _powerball});\n        tickets.push(ticket);\n\n        //give the change to owner\n        if(money > ticket_price)\n            payable(msg.sender).transfer(money - ticket_price);\n    }\n\n    function drawNumbers() public{\n        //include an ethereum random service\n    }\n\n    function givePrizes() public{\n        \n    }\n\n    function mint() public{\n\n    }\n\n    function closeLottery() public{\n        require(lottery_manager == msg.sender);\n        if(active == true)\n        {\n            active = false;\n        }\n        \n        //resetta le strutture\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numbers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_powerball",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "givePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1739  contract MyContract{... */\n  mstore(0x40, 0x80)\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":394:413  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":374:413  uint ticket_price = 1000000000000000000 */\n  0x03\n  sstore\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":474:478  true */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":465:471  active */\n  0x02\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":465:478  active = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":505:515  msg.sender */\n  caller\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":487:502  lottery_manager */\n  0x02\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":487:515  lottery_manager = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1739  contract MyContract{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1739  contract MyContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06d5ee54\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x676c902f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6fd09816\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd85948c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6febde8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1451:1495  function givePrizes() public{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1501:1531  function mint() public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1364:1445  function drawNumbers() public{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1537:1737  function closeLottery() public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":528:689  function startNewRound() public{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":695:1358  function buy(uint _numbers, uint _powerball) public payable{... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1451:1495  function givePrizes() public{... */\n    tag_10:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1501:1531  function mint() public{... */\n    tag_13:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1364:1445  function drawNumbers() public{... */\n    tag_16:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1537:1737  function closeLottery() public{... */\n    tag_19:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1604:1614  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1585:1614  lottery_manager == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1585:1600  lottery_manager */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1585:1614  lottery_manager == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1577:1615  require(lottery_manager == msg.sender) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1638:1642  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1628:1642  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1628:1634  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1628:1642  active == true */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1625:1691  if(active == true)... */\n      tag_32\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1675:1680  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1666:1672  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1666:1680  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1625:1691  if(active == true)... */\n    tag_32:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1537:1737  function closeLottery() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":528:689  function startNewRound() public{... */\n    tag_22:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":596:606  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":577:606  lottery_manager == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":577:592  lottery_manager */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":577:606  lottery_manager == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":569:607  require(lottery_manager == msg.sender) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":630:635  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":620:635  active == false */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":620:626  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":620:635  active == false */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":617:683  if(active == false)... */\n      tag_35\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":668:672  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":659:665  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":659:672  active = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":617:683  if(active == false)... */\n    tag_35:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":528:689  function startNewRound() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":695:1358  function buy(uint _numbers, uint _powerball) public payable{... */\n    tag_26:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":822:826  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":812:826  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":812:818  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":812:826  active == true */\n      iszero\n      iszero\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":804:845  require(active == true, \"Lottery closed\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":919:929  uint money */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":932:941  msg.value */\n      callvalue\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":919:941  uint money = msg.value */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":968:980  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":959:964  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":959:980  money >= ticket_price */\n      lt\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":951:1000  require(money >= ticket_price, \"Value too small\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1093:1113  Ticket memory ticket */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1116:1188  Ticket({buyer : msg.sender, numbers : _numbers, powerball : _powerball}) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1132:1142  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1116:1188  Ticket({buyer : msg.sender, numbers : _numbers, powerball : _powerball}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1154:1162  _numbers */\n      dup6\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1116:1188  Ticket({buyer : msg.sender, numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1176:1186  _powerball */\n      dup5\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1116:1188  Ticket({buyer : msg.sender, numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1093:1188  Ticket memory ticket = Ticket({buyer : msg.sender, numbers : _numbers, powerball : _powerball}) */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1198:1205  tickets */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1211:1217  ticket */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1198:1218  tickets.push(ticket) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1275:1287  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1267:1272  money */\n      dup3\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1267:1287  money > ticket_price */\n      gt\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1264:1351  if(money > ticket_price)... */\n      iszero\n      tag_44\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1309:1319  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1301:1329  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1301:1351  payable(msg.sender).transfer(money - ticket_price) */\n      0x08fc\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1338:1350  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1330:1335  money */\n      dup5\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1330:1350  money - ticket_price */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1301:1351  payable(msg.sender).transfer(money - ticket_price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1264:1351  if(money > ticket_price)... */\n    tag_44:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":754:1358  {... */\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":695:1358  function buy(uint _numbers, uint _powerball) public payable{... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_50:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_52:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_53:\n        /* \"#utility.yul\":490:514   */\n      tag_67\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_52\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_68:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_54:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_70\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_53\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_25:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_73\n      tag_50\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":783:902   */\n    tag_72:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_74\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_54\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_75\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_54\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1339   */\n    tag_55:\n        /* \"#utility.yul\":1254:1265   */\n      0x00\n        /* \"#utility.yul\":1288:1294   */\n      dup3\n        /* \"#utility.yul\":1283:1286   */\n      dup3\n        /* \"#utility.yul\":1276:1295   */\n      mstore\n        /* \"#utility.yul\":1328:1332   */\n      0x20\n        /* \"#utility.yul\":1323:1326   */\n      dup3\n        /* \"#utility.yul\":1319:1333   */\n      add\n        /* \"#utility.yul\":1304:1333   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1345:1509   */\n    tag_56:\n        /* \"#utility.yul\":1485:1501   */\n      0x4c6f747465727920636c6f736564000000000000000000000000000000000000\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1473:1479   */\n      dup3\n        /* \"#utility.yul\":1469:1483   */\n      add\n        /* \"#utility.yul\":1462:1502   */\n      mstore\n        /* \"#utility.yul\":1345:1509   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1881   */\n    tag_57:\n        /* \"#utility.yul\":1657:1660   */\n      0x00\n        /* \"#utility.yul\":1678:1745   */\n      tag_79\n        /* \"#utility.yul\":1742:1744   */\n      0x0e\n        /* \"#utility.yul\":1737:1740   */\n      dup4\n        /* \"#utility.yul\":1678:1745   */\n      tag_55\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1671:1745   */\n      swap2\n      pop\n        /* \"#utility.yul\":1754:1847   */\n      tag_80\n        /* \"#utility.yul\":1843:1846   */\n      dup3\n        /* \"#utility.yul\":1754:1847   */\n      tag_56\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1872:1874   */\n      0x20\n        /* \"#utility.yul\":1867:1870   */\n      dup3\n        /* \"#utility.yul\":1863:1875   */\n      add\n        /* \"#utility.yul\":1856:1875   */\n      swap1\n      pop\n        /* \"#utility.yul\":1515:1881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1887:2306   */\n    tag_39:\n        /* \"#utility.yul\":2053:2057   */\n      0x00\n        /* \"#utility.yul\":2091:2093   */\n      0x20\n        /* \"#utility.yul\":2080:2089   */\n      dup3\n        /* \"#utility.yul\":2076:2094   */\n      add\n        /* \"#utility.yul\":2068:2094   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2149   */\n      dup2\n        /* \"#utility.yul\":2134:2138   */\n      dup2\n        /* \"#utility.yul\":2130:2150   */\n      sub\n        /* \"#utility.yul\":2126:2127   */\n      0x00\n        /* \"#utility.yul\":2115:2124   */\n      dup4\n        /* \"#utility.yul\":2111:2128   */\n      add\n        /* \"#utility.yul\":2104:2151   */\n      mstore\n        /* \"#utility.yul\":2168:2299   */\n      tag_82\n        /* \"#utility.yul\":2294:2298   */\n      dup2\n        /* \"#utility.yul\":2168:2299   */\n      tag_57\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2160:2299   */\n      swap1\n      pop\n        /* \"#utility.yul\":1887:2306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2312:2477   */\n    tag_58:\n        /* \"#utility.yul\":2452:2469   */\n      0x56616c756520746f6f20736d616c6c0000000000000000000000000000000000\n        /* \"#utility.yul\":2448:2449   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup3\n        /* \"#utility.yul\":2436:2450   */\n      add\n        /* \"#utility.yul\":2429:2470   */\n      mstore\n        /* \"#utility.yul\":2312:2477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2483:2849   */\n    tag_59:\n        /* \"#utility.yul\":2625:2628   */\n      0x00\n        /* \"#utility.yul\":2646:2713   */\n      tag_85\n        /* \"#utility.yul\":2710:2712   */\n      0x0f\n        /* \"#utility.yul\":2705:2708   */\n      dup4\n        /* \"#utility.yul\":2646:2713   */\n      tag_55\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2639:2713   */\n      swap2\n      pop\n        /* \"#utility.yul\":2722:2815   */\n      tag_86\n        /* \"#utility.yul\":2811:2814   */\n      dup3\n        /* \"#utility.yul\":2722:2815   */\n      tag_58\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2835:2838   */\n      dup3\n        /* \"#utility.yul\":2831:2843   */\n      add\n        /* \"#utility.yul\":2824:2843   */\n      swap1\n      pop\n        /* \"#utility.yul\":2483:2849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:3274   */\n    tag_42:\n        /* \"#utility.yul\":3021:3025   */\n      0x00\n        /* \"#utility.yul\":3059:3061   */\n      0x20\n        /* \"#utility.yul\":3048:3057   */\n      dup3\n        /* \"#utility.yul\":3044:3062   */\n      add\n        /* \"#utility.yul\":3036:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":3108:3117   */\n      dup2\n        /* \"#utility.yul\":3102:3106   */\n      dup2\n        /* \"#utility.yul\":3098:3118   */\n      sub\n        /* \"#utility.yul\":3094:3095   */\n      0x00\n        /* \"#utility.yul\":3083:3092   */\n      dup4\n        /* \"#utility.yul\":3079:3096   */\n      add\n        /* \"#utility.yul\":3072:3119   */\n      mstore\n        /* \"#utility.yul\":3136:3267   */\n      tag_88\n        /* \"#utility.yul\":3262:3266   */\n      dup2\n        /* \"#utility.yul\":3136:3267   */\n      tag_59\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3128:3267   */\n      swap1\n      pop\n        /* \"#utility.yul\":2855:3274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3280:3460   */\n    tag_60:\n        /* \"#utility.yul\":3328:3405   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3325:3326   */\n      0x00\n        /* \"#utility.yul\":3318:3406   */\n      mstore\n        /* \"#utility.yul\":3425:3429   */\n      0x11\n        /* \"#utility.yul\":3422:3423   */\n      0x04\n        /* \"#utility.yul\":3415:3430   */\n      mstore\n        /* \"#utility.yul\":3449:3453   */\n      0x24\n        /* \"#utility.yul\":3446:3447   */\n      0x00\n        /* \"#utility.yul\":3439:3454   */\n      revert\n        /* \"#utility.yul\":3466:3657   */\n    tag_46:\n        /* \"#utility.yul\":3506:3510   */\n      0x00\n        /* \"#utility.yul\":3526:3546   */\n      tag_91\n        /* \"#utility.yul\":3544:3545   */\n      dup3\n        /* \"#utility.yul\":3526:3546   */\n      tag_52\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3521:3546   */\n      swap2\n      pop\n        /* \"#utility.yul\":3560:3580   */\n      tag_92\n        /* \"#utility.yul\":3578:3579   */\n      dup4\n        /* \"#utility.yul\":3560:3580   */\n      tag_52\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3555:3580   */\n      swap3\n      pop\n        /* \"#utility.yul\":3599:3600   */\n      dup3\n        /* \"#utility.yul\":3596:3597   */\n      dup3\n        /* \"#utility.yul\":3593:3601   */\n      lt\n        /* \"#utility.yul\":3590:3624   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3604:3622   */\n      tag_94\n      tag_60\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3590:3624   */\n    tag_93:\n        /* \"#utility.yul\":3649:3650   */\n      dup3\n        /* \"#utility.yul\":3646:3647   */\n      dup3\n        /* \"#utility.yul\":3642:3651   */\n      sub\n        /* \"#utility.yul\":3634:3651   */\n      swap1\n      pop\n        /* \"#utility.yul\":3466:3657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ffa3c091a2b7ab3ef32a5f31d62b4e07c540412f73c8624b1f52b9aba08b65cf64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006003556001600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105d58061007b6000396000f3fe6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100e9565b005b34801561007d57600080fd5b506100866100eb565b005b34801561009457600080fd5b5061009d6100ed565b005b3480156100ab57600080fd5b506100b46100ef565b005b3480156100c257600080fd5b506100cb610182565b005b6100e760048036038101906100e29190610413565b610215565b005b565b565b565b3373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461014957600080fd5b60011515600260009054906101000a900460ff16151503610180576000600260006101000a81548160ff0219169083151502179055505b565b3373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101dc57600080fd5b60001515600260009054906101000a900460ff16151503610213576001600260006101000a81548160ff0219169083151502179055505b565b60011515600260009054906101000a900460ff1615151461026b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610262906104b0565b60405180910390fd5b60003490506003548110156102b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ac9061051c565b60405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152509050600181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015550506003548211156103d2573373ffffffffffffffffffffffffffffffffffffffff166108fc600354846103a5919061056b565b9081150290604051600060405180830381858888f193505050501580156103d0573d6000803e3d6000fd5b505b50505050565b600080fd5b6000819050919050565b6103f0816103dd565b81146103fb57600080fd5b50565b60008135905061040d816103e7565b92915050565b6000806040838503121561042a576104296103d8565b5b6000610438858286016103fe565b9250506020610449858286016103fe565b9150509250929050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b600061049a600e83610453565b91506104a582610464565b602082019050919050565b600060208201905081810360008301526104c98161048d565b9050919050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b6000610506600f83610453565b9150610511826104d0565b602082019050919050565b60006020820190508181036000830152610535816104f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610576826103dd565b9150610581836103dd565b9250828210156105945761059361053c565b5b82820390509291505056fea2646970667358221220ffa3c091a2b7ab3ef32a5f31d62b4e07c540412f73c8624b1f52b9aba08b65cf64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5D5 DUP1 PUSH2 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0xED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x413 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x180 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x213 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x3D2 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD DUP5 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP2 EQ PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40D DUP2 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH2 0x429 PUSH2 0x3D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP6 DUP3 DUP7 ADD PUSH2 0x3FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x449 DUP6 DUP3 DUP7 ADD PUSH2 0x3FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A PUSH1 0xE DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5 DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C9 DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH1 0xF DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x511 DUP3 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x535 DUP2 PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP3 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x581 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x594 JUMPI PUSH2 0x593 PUSH2 0x53C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT LOG3 0xC0 SWAP2 LOG2 0xB7 0xAB RETURNDATACOPY RETURN 0x2A 0x5F BALANCE 0xD6 0x2B 0x4E SMOD 0xC5 BLOCKHASH COINBASE 0x2F PUSH20 0xC8624B1F52B9ABA08B65CF64736F6C634300080D STOP CALLER ",
							"sourceMap": "57:1682:0:-:0;;;394:19;374:39;;474:4;465:6;;:13;;;;;;;;;;;;;;;;;;505:10;487:15;;:28;;;;;;;;;;;;;;;;;;57:1682;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_113": {
									"entryPoint": 533,
									"id": 113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@closeLottery_145": {
									"entryPoint": 239,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drawNumbers_117": {
									"entryPoint": 237,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givePrizes_121": {
									"entryPoint": 233,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_125": {
									"entryPoint": 235,
									"id": 125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startNewRound_55": {
									"entryPoint": 386,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3660:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1266:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1283:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1288:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1276:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1304:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1323:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1328:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1319:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1304:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1238:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1243:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1254:11:1",
														"type": ""
													}
												],
												"src": "1170:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1451:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1473:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1481:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1469:14:1"
																	},
																	{
																		"hexValue": "4c6f747465727920636c6f736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1485:16:1",
																		"type": "",
																		"value": "Lottery closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1462:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1443:6:1",
														"type": ""
													}
												],
												"src": "1345:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1737:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1678:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1843:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																	"nodeType": "YulIdentifier",
																	"src": "1754:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1856:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1867:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1856:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1649:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1657:3:1",
														"type": ""
													}
												],
												"src": "1515:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2058:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2068:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2080:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2091:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2068:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2126:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2111:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2134:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2160:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2294:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2168:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2160:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2038:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2053:4:1",
														"type": ""
													}
												],
												"src": "1887:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2418:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2440:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2448:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2436:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:14:1"
																	},
																	{
																		"hexValue": "56616c756520746f6f20736d616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2452:17:1",
																		"type": "",
																		"value": "Value too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2410:6:1",
														"type": ""
													}
												],
												"src": "2312:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2639:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2705:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2646:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																	"nodeType": "YulIdentifier",
																	"src": "2722:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2722:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2824:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2835:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2617:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2625:3:1",
														"type": ""
													}
												],
												"src": "2483:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3026:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3036:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3048:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3036:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3094:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3079:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3102:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3108:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3098:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3072:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3128:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3262:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3136:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3136:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3128:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3006:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3021:4:1",
														"type": ""
													}
												],
												"src": "2855:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3308:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3425:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3415:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3446:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3449:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3280:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3521:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3544:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3526:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3521:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3555:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3578:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3560:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3555:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3602:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3604:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3604:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3604:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3596:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3599:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3593:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:8:1"
															},
															"nodeType": "YulIf",
															"src": "3590:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3634:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3646:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3649:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3642:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3634:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3497:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3500:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3506:4:1",
														"type": ""
													}
												],
												"src": "3466:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lottery closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100e9565b005b34801561007d57600080fd5b506100866100eb565b005b34801561009457600080fd5b5061009d6100ed565b005b3480156100ab57600080fd5b506100b46100ef565b005b3480156100c257600080fd5b506100cb610182565b005b6100e760048036038101906100e29190610413565b610215565b005b565b565b565b3373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461014957600080fd5b60011515600260009054906101000a900460ff16151503610180576000600260006101000a81548160ff0219169083151502179055505b565b3373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101dc57600080fd5b60001515600260009054906101000a900460ff16151503610213576001600260006101000a81548160ff0219169083151502179055505b565b60011515600260009054906101000a900460ff1615151461026b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610262906104b0565b60405180910390fd5b60003490506003548110156102b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ac9061051c565b60405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152509050600181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015550506003548211156103d2573373ffffffffffffffffffffffffffffffffffffffff166108fc600354846103a5919061056b565b9081150290604051600060405180830381858888f193505050501580156103d0573d6000803e3d6000fd5b505b50505050565b600080fd5b6000819050919050565b6103f0816103dd565b81146103fb57600080fd5b50565b60008135905061040d816103e7565b92915050565b6000806040838503121561042a576104296103d8565b5b6000610438858286016103fe565b9250506020610449858286016103fe565b9150509250929050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b600061049a600e83610453565b91506104a582610464565b602082019050919050565b600060208201905081810360008301526104c98161048d565b9050919050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b6000610506600f83610453565b9150610511826104d0565b602082019050919050565b60006020820190508181036000830152610535816104f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610576826103dd565b9150610581836103dd565b9250828210156105945761059361053c565b5b82820390509291505056fea2646970667358221220ffa3c091a2b7ab3ef32a5f31d62b4e07c540412f73c8624b1f52b9aba08b65cf64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0xED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x413 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x180 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x213 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x3D2 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD DUP5 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP2 EQ PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40D DUP2 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH2 0x429 PUSH2 0x3D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP6 DUP3 DUP7 ADD PUSH2 0x3FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x449 DUP6 DUP3 DUP7 ADD PUSH2 0x3FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A PUSH1 0xE DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5 DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C9 DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH1 0xF DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x511 DUP3 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x535 DUP2 PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP3 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x581 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x594 JUMPI PUSH2 0x593 PUSH2 0x53C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT LOG3 0xC0 SWAP2 LOG2 0xB7 0xAB RETURNDATACOPY RETURN 0x2A 0x5F BALANCE 0xD6 0x2B 0x4E SMOD 0xC5 BLOCKHASH COINBASE 0x2F PUSH20 0xC8624B1F52B9ABA08B65CF64736F6C634300080D STOP CALLER ",
							"sourceMap": "57:1682:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1451:44;;;;;;;;;;;;;:::i;:::-;;1501:30;;;;;;;;;;;;;:::i;:::-;;1364:81;;;;;;;;;;;;;:::i;:::-;;1537:200;;;;;;;;;;;;;:::i;:::-;;528:161;;;;;;;;;;;;;:::i;:::-;;695:663;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1451:44;:::o;1501:30::-;:::o;1364:81::-;:::o;1537:200::-;1604:10;1585:29;;:15;;;;;;;;;;;:29;;;1577:38;;;;;;1638:4;1628:14;;:6;;;;;;;;;;;:14;;;1625:66;;1675:5;1666:6;;:14;;;;;;;;;;;;;;;;;;1625:66;1537:200::o;528:161::-;596:10;577:29;;:15;;;;;;;;;;;:29;;;569:38;;;;;;630:5;620:15;;:6;;;;;;;;;;;:15;;;617:66;;668:4;659:6;;:13;;;;;;;;;;;;;;;;;;617:66;528:161::o;695:663::-;822:4;812:14;;:6;;;;;;;;;;;:14;;;804:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;919:10;932:9;919:22;;968:12;;959:5;:21;;951:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1093:20;1116:72;;;;;;;;1132:10;1116:72;;;;;;1154:8;1116:72;;;;1176:10;1116:72;;;1093:95;;1198:7;1211:6;1198:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1275:12;;1267:5;:20;1264:87;;;1309:10;1301:28;;:50;1338:12;;1330:5;:20;;;;:::i;:::-;1301:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:87;754:604;;695:663;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:169::-;1254:11;1288:6;1283:3;1276:19;1328:4;1323:3;1319:14;1304:29;;1170:169;;;;:::o;1345:164::-;1485:16;1481:1;1473:6;1469:14;1462:40;1345:164;:::o;1515:366::-;1657:3;1678:67;1742:2;1737:3;1678:67;:::i;:::-;1671:74;;1754:93;1843:3;1754:93;:::i;:::-;1872:2;1867:3;1863:12;1856:19;;1515:366;;;:::o;1887:419::-;2053:4;2091:2;2080:9;2076:18;2068:26;;2140:9;2134:4;2130:20;2126:1;2115:9;2111:17;2104:47;2168:131;2294:4;2168:131;:::i;:::-;2160:139;;1887:419;;;:::o;2312:165::-;2452:17;2448:1;2440:6;2436:14;2429:41;2312:165;:::o;2483:366::-;2625:3;2646:67;2710:2;2705:3;2646:67;:::i;:::-;2639:74;;2722:93;2811:3;2722:93;:::i;:::-;2840:2;2835:3;2831:12;2824:19;;2483:366;;;:::o;2855:419::-;3021:4;3059:2;3048:9;3044:18;3036:26;;3108:9;3102:4;3098:20;3094:1;3083:9;3079:17;3072:47;3136:131;3262:4;3136:131;:::i;:::-;3128:139;;2855:419;;;:::o;3280:180::-;3328:77;3325:1;3318:88;3425:4;3422:1;3415:15;3449:4;3446:1;3439:15;3466:191;3506:4;3526:20;3544:1;3526:20;:::i;:::-;3521:25;;3560:20;3578:1;3560:20;:::i;:::-;3555:25;;3599:1;3596;3593:8;3590:34;;;3604:18;;:::i;:::-;3590:34;3649:1;3646;3642:9;3634:17;;3466:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "298600",
								"executionCost": "71002",
								"totalCost": "369602"
							},
							"external": {
								"buy(uint256,uint256)": "infinite",
								"closeLottery()": "28846",
								"drawNumbers()": "166",
								"givePrizes()": "122",
								"mint()": "144",
								"startNewRound()": "28868"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1739,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 394,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 374,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 374,
									"end": 413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 474,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 465,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 465,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 465,
									"end": 478,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 465,
									"end": 478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 505,
									"end": 515,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 487,
									"end": 502,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 487,
									"end": 502,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 487,
									"end": 515,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1739,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffa3c091a2b7ab3ef32a5f31d62b4e07c540412f73c8624b1f52b9aba08b65cf64736f6c634300080d0033",
									".code": [
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "6D5EE54"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "676C902F"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "6FD09816"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "BD85948C"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "D6FEBDE8"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1614,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1577,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1625,
											"end": 1691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1691,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1625,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1737,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 596,
											"end": 606,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 577,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 577,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 577,
											"end": 606,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 569,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 569,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 569,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 569,
											"end": 607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 569,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 569,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 620,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 620,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 620,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 617,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 617,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 668,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 659,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 659,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 659,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 617,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 689,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 812,
											"end": 826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 812,
											"end": 826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 812,
											"end": 826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 812,
											"end": 826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 812,
											"end": 826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 804,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 804,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 919,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 968,
											"end": 980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 980,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 959,
											"end": 980,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1142,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1186,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1287,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1264,
											"end": 1351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1319,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1338,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1338,
											"end": 1350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1264,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 695,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1345,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1345,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "4C6F747465727920636C6F736564000000000000000000000000000000000000"
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1509,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1737,
											"end": 1740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1843,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1887,
											"end": 2306,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1887,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2168,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2168,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2306,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2312,
											"end": 2477,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2312,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "56616C756520746F6F20736D616C6C0000000000000000000000000000000000"
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2477,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2722,
											"end": 2815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2722,
											"end": 2815,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2722,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2855,
											"end": 3274,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2855,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3262,
											"end": 3266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3136,
											"end": 3267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3267,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3136,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 3274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 3274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 3274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 3274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3280,
											"end": 3460,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3280,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3405,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3453,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3544,
											"end": 3545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3578,
											"end": 3579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3580,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3601,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3590,
											"end": 3624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3590,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3590,
											"end": 3624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3590,
											"end": 3624,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3590,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3657,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256,uint256)": "d6febde8",
							"closeLottery()": "6fd09816",
							"drawNumbers()": "676c902f",
							"givePrizes()": "06d5ee54",
							"mint()": "1249c58b",
							"startNewRound()": "bd85948c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numbers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_powerball\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"givePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":{\"keccak256\":\"0x443f7bad16ba5a0fa9cb40a2f5afa318b5343bdfec9fa29e15a270b8efc89816\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7240951f21cade0899f0392b83fa60389ac4c05e1975a010d424e2c4d8b8e1fb\",\"dweb:/ipfs/QmWb5HN7b3LhTUVFKvfNy9HjeFqfEtHuj2fqGRaq4oGkos\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "users",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 15,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "tickets",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Ticket)8_storage)dyn_storage"
							},
							{
								"astId": 17,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "active",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 19,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "lottery_manager",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "ticket_price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Ticket)8_storage)dyn_storage": {
								"base": "t_struct(Ticket)8_storage",
								"encoding": "dynamic_array",
								"label": "struct MyContract.Ticket[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(Ticket)8_storage": {
								"encoding": "inplace",
								"label": "struct MyContract.Ticket",
								"members": [
									{
										"astId": 3,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "buyer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 5,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "numbers",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "powerball",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:19:5:\n   |\n19 |     constructor() public payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 522,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 428
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "MyContract",
							"nameLocation": "66:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.Ticket",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "buyer",
											"nameLocation": "147:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "139:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "139:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "167:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "162:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "162:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "powerball",
											"nameLocation": "189:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "184:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "184:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "122:6:0",
									"nodeType": "StructDefinition",
									"scope": 146,
									"src": "115:90:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "221:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "211:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "211:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 10,
										"nodeType": "ArrayTypeName",
										"src": "211:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "tickets",
									"nameLocation": "253:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "244:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Ticket_$8_storage_$dyn_storage",
										"typeString": "struct MyContract.Ticket[]"
									},
									"typeName": {
										"baseType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "Ticket",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "244:6:0"
											},
											"referencedDeclaration": 8,
											"src": "244:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Ticket_$8_storage_ptr",
												"typeString": "struct MyContract.Ticket"
											}
										},
										"id": 14,
										"nodeType": "ArrayTypeName",
										"src": "244:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Ticket_$8_storage_$dyn_storage_ptr",
											"typeString": "struct MyContract.Ticket[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "active",
									"nameLocation": "288:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "283:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "283:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "lottery_manager",
									"nameLocation": "353:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "345:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "ticket_price",
									"nameLocation": "379:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "374:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "374:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "394:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "456:66:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "465:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "465:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "465:13:0"
											},
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "lottery_manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "487:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 30,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "505:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "487:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "487:28:0"
											}
										]
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:0"
									},
									"scope": 146,
									"src": "428:94:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "559:130:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 39,
																"name": "lottery_manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "577:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 40,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "596:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "596:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "577:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "569:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "569:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 45,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "620:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "630:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "620:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "IfStatement",
												"src": "617:66:0",
												"trueBody": {
													"id": 52,
													"nodeType": "Block",
													"src": "645:38:0",
													"statements": [
														{
															"expression": {
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 48,
																	"name": "active",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "659:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "668:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "659:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 51,
															"nodeType": "ExpressionStatement",
															"src": "659:13:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "bd85948c",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "537:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:0:0"
									},
									"scope": 146,
									"src": "528:161:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "754:604:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 63,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "812:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "822:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "812:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f747465727920636c6f736564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															},
															"value": "Lottery closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "804:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "804:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "804:41:0"
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "924:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "919:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 69,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "919:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"expression": {
														"id": 71,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "932:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "932:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "919:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 75,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 76,
																"name": "ticket_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "968:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "959:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56616c756520746f6f20736d616c6c",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "982:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															},
															"value": "Value too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "951:49:0"
											},
											{
												"assignments": [
													83
												],
												"declarations": [
													{
														"constant": false,
														"id": 83,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "1107:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "1093:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$8_memory_ptr",
															"typeString": "struct MyContract.Ticket"
														},
														"typeName": {
															"id": 82,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 81,
																"name": "Ticket",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 8,
																"src": "1093:6:0"
															},
															"referencedDeclaration": 8,
															"src": "1093:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$8_storage_ptr",
																"typeString": "struct MyContract.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 90,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 85,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1132:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1132:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 87,
															"name": "_numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1154:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 88,
															"name": "_powerball",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1176:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 84,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1116:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$8_storage_ptr_$",
															"typeString": "type(struct MyContract.Ticket storage pointer)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"buyer",
														"numbers",
														"powerball"
													],
													"nodeType": "FunctionCall",
													"src": "1116:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$8_memory_ptr",
														"typeString": "struct MyContract.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1093:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 94,
															"name": "ticket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$8_memory_ptr",
																"typeString": "struct MyContract.Ticket memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Ticket_$8_memory_ptr",
																"typeString": "struct MyContract.Ticket memory"
															}
														],
														"expression": {
															"id": 91,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1198:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Ticket_$8_storage_$dyn_storage",
																"typeString": "struct MyContract.Ticket storage ref[] storage ref"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1198:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$8_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$8_storage_$returns$__$bound_to$_t_array$_t_struct$_Ticket_$8_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MyContract.Ticket storage ref[] storage pointer,struct MyContract.Ticket storage ref)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1198:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1198:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 97,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 98,
														"name": "ticket_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1275:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1267:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "IfStatement",
												"src": "1264:87:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 106,
																	"name": "money",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1330:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 107,
																	"name": "ticket_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1338:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1330:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 102,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1309:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1309:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1301:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1301:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "1301:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1301:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 110,
													"nodeType": "ExpressionStatement",
													"src": "1301:50:0"
												}
											}
										]
									},
									"functionSelector": "d6febde8",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "704:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_numbers",
												"nameLocation": "713:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "708:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_powerball",
												"nameLocation": "728:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "723:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:32:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:0"
									},
									"scope": 146,
									"src": "695:663:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1393:52:0",
										"statements": []
									},
									"functionSelector": "676c902f",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drawNumbers",
									"nameLocation": "1373:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:0:0"
									},
									"scope": 146,
									"src": "1364:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1479:16:0",
										"statements": []
									},
									"functionSelector": "06d5ee54",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givePrizes",
									"nameLocation": "1460:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:2:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1479:0:0"
									},
									"scope": 146,
									"src": "1451:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1523:8:0",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1510:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:2:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:0"
									},
									"scope": 146,
									"src": "1501:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1567:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "lottery_manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1585:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 130,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1604:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1604:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1585:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1577:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1628:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1638:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1628:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 143,
												"nodeType": "IfStatement",
												"src": "1625:66:0",
												"trueBody": {
													"id": 142,
													"nodeType": "Block",
													"src": "1652:39:0",
													"statements": [
														{
															"expression": {
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 138,
																	"name": "active",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1666:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1666:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 141,
															"nodeType": "ExpressionStatement",
															"src": "1666:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6fd09816",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closeLottery",
									"nameLocation": "1546:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1558:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:0"
									},
									"scope": 146,
									"src": "1537:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 147,
							"src": "57:1682:0",
							"usedErrors": []
						}
					],
					"src": "32:1708:0"
				},
				"id": 0
			}
		}
	}
}