{
	"id": "411ac2533f5fad5808ce65a71149517c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\n\n\n// Contract example used in the slides\ncontract MyContract{\n\n    //create a structure ticket\n    struct Ticket {\n        uint numbers;\n        uint powerball;\n    }\n\n    mapping(address => uint) balance; //user's NFTs\n    mapping(address => Ticket) tickets; //user's tickets\n    bool active; //true if a round is active, false otherwise\n    uint ticket_price = 1;\n\n    constructor() public payable{\n       active = true;\n       balance[msg.sender] = msg.value;\n    }\n\n    function startNewRound() public{\n        if(active == false)\n            active = true;\n    }\n\n    function buy(uint _numbers, uint _powerball) public payable returns(bool){\n\n        require(active == true, \"Lottery closed\");\n\n        //check if the numbers are ok\n\n        //create an istance of ticket type\n        //TODO: passare la lista come parametro\n        Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball});\n        tickets[msg.sender] = ticket;\n\n        uint money = balance[msg.sender];\n\n        require(money >= ticket_price, \"Value too small\");\n\n        //add the ticket into dataset\n\n        /*if(money > ticket_price)\n            payable(msg.sender).transfer(msg.value - ticket_price);*/\n\n        return true;\n    }\n\n    function drawNumbers() public{\n        //include a ethereum random service\n    }\n\n    function givePrizes() public{\n        \n    }\n\n    function mint() public{\n\n    }\n\n    function closeLottery() public{\n        if(active == true)\n            active = false;\n\n        //resetta le strutture\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		}
	},
	"output": {
		"contracts": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numbers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_powerball",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "givePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":98:1590  contract MyContract{... */\n  mstore(0x40, 0x80)\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":420:421  1 */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":400:421  uint ticket_price = 1 */\n  0x03\n  sstore\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":474:478  true */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":465:471  active */\n  0x02\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":465:478  active = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":509:518  msg.value */\n  callvalue\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":487:494  balance */\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":487:506  balance[msg.sender] */\n  dup1\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":495:505  msg.sender */\n  caller\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":487:506  balance[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":487:518  balance[msg.sender] = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":98:1590  contract MyContract{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":98:1590  contract MyContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x06d5ee54\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x676c902f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6fd09816\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd85948c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6febde8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1378:1422  function givePrizes() public{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1428:1458  function mint() public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1292:1372  function drawNumbers() public{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1464:1588  function closeLottery() public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":531:624  function startNewRound() public{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":630:1286  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1378:1422  function givePrizes() public{... */\n    tag_10:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1428:1458  function mint() public{... */\n    tag_13:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1292:1372  function drawNumbers() public{... */\n    tag_16:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1464:1588  function closeLottery() public{... */\n    tag_19:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1517:1521  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1507:1521  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1507:1513  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1507:1521  active == true */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1504:1549  if(active == true)... */\n      tag_33\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1544:1549  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1535:1541  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1535:1549  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1504:1549  if(active == true)... */\n    tag_33:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1464:1588  function closeLottery() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":531:624  function startNewRound() public{... */\n    tag_22:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":585:590  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":575:590  active == false */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":575:581  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":575:590  active == false */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":572:617  if(active == false)... */\n      tag_35\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":613:617  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":604:610  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":604:617  active = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":572:617  if(active == false)... */\n    tag_35:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":531:624  function startNewRound() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":630:1286  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_26:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":698:702  bool */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":732:736  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":722:736  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":722:728  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":722:736  active == true */\n      iszero\n      iszero\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":714:755  require(active == true, \"Lottery closed\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":896:916  Ticket memory ticket */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":919:971  Ticket({numbers : _numbers, powerball : _powerball}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":937:945  _numbers */\n      dup6\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":919:971  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":959:969  _powerball */\n      dup5\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":919:971  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":896:971  Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball}) */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1003:1009  ticket */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":981:988  tickets */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":981:1000  tickets[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":989:999  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":981:1000  tickets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":981:1009  tickets[msg.sender] = ticket */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1020:1030  uint money */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1033:1040  balance */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1033:1052  balance[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1041:1051  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1033:1052  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1020:1052  uint money = balance[msg.sender] */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1080:1092  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1071:1076  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1071:1092  money >= ticket_price */\n      lt\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1063:1112  require(money >= ticket_price, \"Value too small\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1275:1279  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1268:1279  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":630:1286  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_44:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_46:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_47:\n        /* \"#utility.yul\":490:514   */\n      tag_62\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_46\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_63:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_48:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_65\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_47\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_25:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_68\n      tag_44\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":783:902   */\n    tag_67:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_69\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_48\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_70\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_48\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1260   */\n    tag_49:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1247:1252   */\n      dup2\n        /* \"#utility.yul\":1240:1253   */\n      iszero\n        /* \"#utility.yul\":1233:1254   */\n      iszero\n        /* \"#utility.yul\":1222:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1266:1375   */\n    tag_50:\n        /* \"#utility.yul\":1347:1368   */\n      tag_73\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1347:1368   */\n      tag_49\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1369   */\n      mstore\n        /* \"#utility.yul\":1266:1375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1591   */\n    tag_28:\n        /* \"#utility.yul\":1468:1472   */\n      0x00\n        /* \"#utility.yul\":1506:1508   */\n      0x20\n        /* \"#utility.yul\":1495:1504   */\n      dup3\n        /* \"#utility.yul\":1491:1509   */\n      add\n        /* \"#utility.yul\":1483:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1584   */\n      tag_75\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1566:1583   */\n      add\n        /* \"#utility.yul\":1557:1563   */\n      dup5\n        /* \"#utility.yul\":1519:1584   */\n      tag_50\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1381:1591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1597:1766   */\n    tag_51:\n        /* \"#utility.yul\":1681:1692   */\n      0x00\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1710:1713   */\n      dup3\n        /* \"#utility.yul\":1703:1722   */\n      mstore\n        /* \"#utility.yul\":1755:1759   */\n      0x20\n        /* \"#utility.yul\":1750:1753   */\n      dup3\n        /* \"#utility.yul\":1746:1760   */\n      add\n        /* \"#utility.yul\":1731:1760   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1936   */\n    tag_52:\n        /* \"#utility.yul\":1912:1928   */\n      0x4c6f747465727920636c6f736564000000000000000000000000000000000000\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1900:1906   */\n      dup3\n        /* \"#utility.yul\":1896:1910   */\n      add\n        /* \"#utility.yul\":1889:1929   */\n      mstore\n        /* \"#utility.yul\":1772:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2308   */\n    tag_53:\n        /* \"#utility.yul\":2084:2087   */\n      0x00\n        /* \"#utility.yul\":2105:2172   */\n      tag_79\n        /* \"#utility.yul\":2169:2171   */\n      0x0e\n        /* \"#utility.yul\":2164:2167   */\n      dup4\n        /* \"#utility.yul\":2105:2172   */\n      tag_51\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2098:2172   */\n      swap2\n      pop\n        /* \"#utility.yul\":2181:2274   */\n      tag_80\n        /* \"#utility.yul\":2270:2273   */\n      dup3\n        /* \"#utility.yul\":2181:2274   */\n      tag_52\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2299:2301   */\n      0x20\n        /* \"#utility.yul\":2294:2297   */\n      dup3\n        /* \"#utility.yul\":2290:2302   */\n      add\n        /* \"#utility.yul\":2283:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":1942:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2733   */\n    tag_39:\n        /* \"#utility.yul\":2480:2484   */\n      0x00\n        /* \"#utility.yul\":2518:2520   */\n      0x20\n        /* \"#utility.yul\":2507:2516   */\n      dup3\n        /* \"#utility.yul\":2503:2521   */\n      add\n        /* \"#utility.yul\":2495:2521   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2576   */\n      dup2\n        /* \"#utility.yul\":2561:2565   */\n      dup2\n        /* \"#utility.yul\":2557:2577   */\n      sub\n        /* \"#utility.yul\":2553:2554   */\n      0x00\n        /* \"#utility.yul\":2542:2551   */\n      dup4\n        /* \"#utility.yul\":2538:2555   */\n      add\n        /* \"#utility.yul\":2531:2578   */\n      mstore\n        /* \"#utility.yul\":2595:2726   */\n      tag_82\n        /* \"#utility.yul\":2721:2725   */\n      dup2\n        /* \"#utility.yul\":2595:2726   */\n      tag_53\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2587:2726   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2739:2904   */\n    tag_54:\n        /* \"#utility.yul\":2879:2896   */\n      0x56616c756520746f6f20736d616c6c0000000000000000000000000000000000\n        /* \"#utility.yul\":2875:2876   */\n      0x00\n        /* \"#utility.yul\":2867:2873   */\n      dup3\n        /* \"#utility.yul\":2863:2877   */\n      add\n        /* \"#utility.yul\":2856:2897   */\n      mstore\n        /* \"#utility.yul\":2739:2904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:3276   */\n    tag_55:\n        /* \"#utility.yul\":3052:3055   */\n      0x00\n        /* \"#utility.yul\":3073:3140   */\n      tag_85\n        /* \"#utility.yul\":3137:3139   */\n      0x0f\n        /* \"#utility.yul\":3132:3135   */\n      dup4\n        /* \"#utility.yul\":3073:3140   */\n      tag_51\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3066:3140   */\n      swap2\n      pop\n        /* \"#utility.yul\":3149:3242   */\n      tag_86\n        /* \"#utility.yul\":3238:3241   */\n      dup3\n        /* \"#utility.yul\":3149:3242   */\n      tag_54\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3262:3265   */\n      dup3\n        /* \"#utility.yul\":3258:3270   */\n      add\n        /* \"#utility.yul\":3251:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2910:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3701   */\n    tag_42:\n        /* \"#utility.yul\":3448:3452   */\n      0x00\n        /* \"#utility.yul\":3486:3488   */\n      0x20\n        /* \"#utility.yul\":3475:3484   */\n      dup3\n        /* \"#utility.yul\":3471:3489   */\n      add\n        /* \"#utility.yul\":3463:3489   */\n      swap1\n      pop\n        /* \"#utility.yul\":3535:3544   */\n      dup2\n        /* \"#utility.yul\":3529:3533   */\n      dup2\n        /* \"#utility.yul\":3525:3545   */\n      sub\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3510:3519   */\n      dup4\n        /* \"#utility.yul\":3506:3523   */\n      add\n        /* \"#utility.yul\":3499:3546   */\n      mstore\n        /* \"#utility.yul\":3563:3694   */\n      tag_88\n        /* \"#utility.yul\":3689:3693   */\n      dup2\n        /* \"#utility.yul\":3563:3694   */\n      tag_55\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3555:3694   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201549c3e6255ae8627a31cbe66691bc7ecaadf087e2d096708fb00d1af0a29f8e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260016003556001600260006101000a81548160ff021916908315150217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104be806100766000396000f3fe608060405260043610610072576000357c01000000000000000000000000000000000000000000000000000000009004806306d5ee54146100775780631249c58b1461008e578063676c902f146100a55780636fd09816146100bc578063bd85948c146100d3578063d6febde8146100ea575b600080fd5b34801561008357600080fd5b5061008c61011a565b005b34801561009a57600080fd5b506100a361011c565b005b3480156100b157600080fd5b506100ba61011e565b005b3480156100c857600080fd5b506100d1610120565b005b3480156100df57600080fd5b506100e8610159565b005b61010460048036038101906100ff9190610329565b610192565b6040516101119190610384565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff16151503610157576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610190576001600260006101000a81548160ff0219169083151502179055505b565b600060011515600260009054906101000a900460ff161515146101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e1906103fc565b60405180910390fd5b6000604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506003548110156102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610468565b60405180910390fd5b60019250505092915050565b600080fd5b6000819050919050565b610306816102f3565b811461031157600080fd5b50565b600081359050610323816102fd565b92915050565b600080604083850312156103405761033f6102ee565b5b600061034e85828601610314565b925050602061035f85828601610314565b9150509250929050565b60008115159050919050565b61037e81610369565b82525050565b60006020820190506103996000830184610375565b92915050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b60006103e6600e8361039f565b91506103f1826103b0565b602082019050919050565b60006020820190508181036000830152610415816103d9565b9050919050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b6000610452600f8361039f565b915061045d8261041c565b602082019050919050565b6000602082019050818103600083015261048181610445565b905091905056fea26469706673582212201549c3e6255ae8627a31cbe66691bc7ecaadf087e2d096708fb00d1af0a29f8e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4BE DUP1 PUSH2 0x76 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x120 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x159 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x157 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306 DUP2 PUSH2 0x2F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x323 DUP2 PUSH2 0x2FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0x2EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP6 DUP3 DUP7 ADD PUSH2 0x314 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35F DUP6 DUP3 DUP7 ADD PUSH2 0x314 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x399 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 PUSH1 0xE DUP4 PUSH2 0x39F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP3 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x415 DUP2 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 PUSH1 0xF DUP4 PUSH2 0x39F JUMP JUMPDEST SWAP2 POP PUSH2 0x45D DUP3 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x481 DUP2 PUSH2 0x445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x49 0xC3 0xE6 0x25 GAS 0xE8 PUSH3 0x7A31CB 0xE6 PUSH7 0x91BC7ECAADF087 0xE2 0xD0 SWAP7 PUSH17 0x8FB00D1AF0A29F8E64736F6C634300080D STOP CALLER ",
							"sourceMap": "98:1492:0:-:0;;;420:1;400:21;;474:4;465:6;;:13;;;;;;;;;;;;;;;;;;509:9;487:7;:19;495:10;487:19;;;;;;;;;;;;;;;:31;;;;98:1492;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_96": {
									"entryPoint": 402,
									"id": 96,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@closeLottery_120": {
									"entryPoint": 288,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drawNumbers_100": {
									"entryPoint": 286,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givePrizes_104": {
									"entryPoint": 282,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_108": {
									"entryPoint": 284,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startNewRound_48": {
									"entryPoint": 345,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3704:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1247:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1240:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1204:7:1",
														"type": ""
													}
												],
												"src": "1170:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1362:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:1",
														"type": ""
													}
												],
												"src": "1266:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1557:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1581:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1566:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1519:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1457:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1468:4:1",
														"type": ""
													}
												],
												"src": "1381:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1693:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1710:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1703:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1731:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1731:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1665:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1670:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1681:11:1",
														"type": ""
													}
												],
												"src": "1597:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:14:1"
																	},
																	{
																		"hexValue": "4c6f747465727920636c6f736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:16:1",
																		"type": "",
																		"value": "Lottery closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1870:6:1",
														"type": ""
													}
												],
												"src": "1772:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2105:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																	"nodeType": "YulIdentifier",
																	"src": "2181:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2283:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2084:3:1",
														"type": ""
													}
												],
												"src": "1942:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2553:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2561:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2567:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2557:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2587:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2721:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2595:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2587:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2465:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2480:4:1",
														"type": ""
													}
												],
												"src": "2314:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2845:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2875:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:14:1"
																	},
																	{
																		"hexValue": "56616c756520746f6f20736d616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2879:17:1",
																		"type": "",
																		"value": "Value too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2856:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2837:6:1",
														"type": ""
													}
												],
												"src": "2739:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3056:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3066:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3132:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3073:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3238:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																	"nodeType": "YulIdentifier",
																	"src": "3149:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3251:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3262:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3044:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3052:3:1",
														"type": ""
													}
												],
												"src": "2910:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3463:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3475:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3463:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3521:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3506:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3529:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3535:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3499:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3555:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3689:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3563:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3433:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3448:4:1",
														"type": ""
													}
												],
												"src": "3282:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lottery closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610072576000357c01000000000000000000000000000000000000000000000000000000009004806306d5ee54146100775780631249c58b1461008e578063676c902f146100a55780636fd09816146100bc578063bd85948c146100d3578063d6febde8146100ea575b600080fd5b34801561008357600080fd5b5061008c61011a565b005b34801561009a57600080fd5b506100a361011c565b005b3480156100b157600080fd5b506100ba61011e565b005b3480156100c857600080fd5b506100d1610120565b005b3480156100df57600080fd5b506100e8610159565b005b61010460048036038101906100ff9190610329565b610192565b6040516101119190610384565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff16151503610157576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610190576001600260006101000a81548160ff0219169083151502179055505b565b600060011515600260009054906101000a900460ff161515146101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e1906103fc565b60405180910390fd5b6000604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506003548110156102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610468565b60405180910390fd5b60019250505092915050565b600080fd5b6000819050919050565b610306816102f3565b811461031157600080fd5b50565b600081359050610323816102fd565b92915050565b600080604083850312156103405761033f6102ee565b5b600061034e85828601610314565b925050602061035f85828601610314565b9150509250929050565b60008115159050919050565b61037e81610369565b82525050565b60006020820190506103996000830184610375565b92915050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b60006103e6600e8361039f565b91506103f1826103b0565b602082019050919050565b60006020820190508181036000830152610415816103d9565b9050919050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b6000610452600f8361039f565b915061045d8261041c565b602082019050919050565b6000602082019050818103600083015261048181610445565b905091905056fea26469706673582212201549c3e6255ae8627a31cbe66691bc7ecaadf087e2d096708fb00d1af0a29f8e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x120 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x159 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x157 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306 DUP2 PUSH2 0x2F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x323 DUP2 PUSH2 0x2FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0x2EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP6 DUP3 DUP7 ADD PUSH2 0x314 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35F DUP6 DUP3 DUP7 ADD PUSH2 0x314 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x399 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 PUSH1 0xE DUP4 PUSH2 0x39F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP3 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x415 DUP2 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 PUSH1 0xF DUP4 PUSH2 0x39F JUMP JUMPDEST SWAP2 POP PUSH2 0x45D DUP3 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x481 DUP2 PUSH2 0x445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x49 0xC3 0xE6 0x25 GAS 0xE8 PUSH3 0x7A31CB 0xE6 PUSH7 0x91BC7ECAADF087 0xE2 0xD0 SWAP7 PUSH17 0x8FB00D1AF0A29F8E64736F6C634300080D STOP CALLER ",
							"sourceMap": "98:1492:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1378:44;;;;;;;;;;;;;:::i;:::-;;1428:30;;;;;;;;;;;;;:::i;:::-;;1292:80;;;;;;;;;;;;;:::i;:::-;;1464:124;;;;;;;;;;;;;:::i;:::-;;531:93;;;;;;;;;;;;;:::i;:::-;;630:656;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:44;:::o;1428:30::-;:::o;1292:80::-;:::o;1464:124::-;1517:4;1507:14;;:6;;;;;;;;;;;:14;;;1504:45;;1544:5;1535:6;;:14;;;;;;;;;;;;;;;;;;1504:45;1464:124::o;531:93::-;585:5;575:15;;:6;;;;;;;;;;;:15;;;572:45;;613:4;604:6;;:13;;;;;;;;;;;;;;;;;;572:45;531:93::o;630:656::-;698:4;732;722:14;;:6;;;;;;;;;;;:14;;;714:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;896:20;919:52;;;;;;;;937:8;919:52;;;;959:10;919:52;;;896:75;;1003:6;981:7;:19;989:10;981:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;1020:10;1033:7;:19;1041:10;1033:19;;;;;;;;;;;;;;;;1020:32;;1080:12;;1071:5;:21;;1063:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1275:4;1268:11;;;;630:656;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:109::-;1347:21;1362:5;1347:21;:::i;:::-;1342:3;1335:34;1266:109;;:::o;1381:210::-;1468:4;1506:2;1495:9;1491:18;1483:26;;1519:65;1581:1;1570:9;1566:17;1557:6;1519:65;:::i;:::-;1381:210;;;;:::o;1597:169::-;1681:11;1715:6;1710:3;1703:19;1755:4;1750:3;1746:14;1731:29;;1597:169;;;;:::o;1772:164::-;1912:16;1908:1;1900:6;1896:14;1889:40;1772:164;:::o;1942:366::-;2084:3;2105:67;2169:2;2164:3;2105:67;:::i;:::-;2098:74;;2181:93;2270:3;2181:93;:::i;:::-;2299:2;2294:3;2290:12;2283:19;;1942:366;;;:::o;2314:419::-;2480:4;2518:2;2507:9;2503:18;2495:26;;2567:9;2561:4;2557:20;2553:1;2542:9;2538:17;2531:47;2595:131;2721:4;2595:131;:::i;:::-;2587:139;;2314:419;;;:::o;2739:165::-;2879:17;2875:1;2867:6;2863:14;2856:41;2739:165;:::o;2910:366::-;3052:3;3073:67;3137:2;3132:3;3073:67;:::i;:::-;3066:74;;3149:93;3238:3;3149:93;:::i;:::-;3267:2;3262:3;3258:12;3251:19;;2910:366;;;:::o;3282:419::-;3448:4;3486:2;3475:9;3471:18;3463:26;;3535:9;3529:4;3525:20;3521:1;3510:9;3506:17;3499:47;3563:131;3689:4;3563:131;:::i;:::-;3555:139;;3282:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "242800",
								"executionCost": "60632",
								"totalCost": "303432"
							},
							"external": {
								"buy(uint256,uint256)": "infinite",
								"closeLottery()": "20731",
								"drawNumbers()": "171",
								"givePrizes()": "127",
								"mint()": "149",
								"startNewRound()": "20753"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1590,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 400,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 400,
									"end": 421,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 474,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 465,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 465,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 465,
									"end": 478,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 465,
									"end": 478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 465,
									"end": 478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 509,
									"end": 518,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 487,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 506,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 495,
									"end": 505,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 506,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 506,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 487,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 506,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 487,
									"end": 518,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1590,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201549c3e6255ae8627a31cbe66691bc7ecaadf087e2d096708fb00d1af0a29f8e64736f6c634300080d0033",
									".code": [
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "6D5EE54"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "676C902F"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "6FD09816"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "BD85948C"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "D6FEBDE8"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1422,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1507,
											"end": 1521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1504,
											"end": 1549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1549,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1504,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 575,
											"end": 590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 572,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 572,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 604,
											"end": 617,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 604,
											"end": 617,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 572,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 624,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 722,
											"end": 736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 722,
											"end": 736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 722,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 722,
											"end": 728,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 722,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 722,
											"end": 728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 722,
											"end": 736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 722,
											"end": 736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 722,
											"end": 736,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 714,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 714,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 896,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 937,
											"end": 945,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 919,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 896,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 896,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 999,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1000,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1051,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1052,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1080,
											"end": 1092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1092,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "4C6F747465727920636C6F736564000000000000000000000000000000000000"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2270,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "56616C756520746F6F20736D616C6C0000000000000000000000000000000000"
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3689,
											"end": 3693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256,uint256)": "d6febde8",
							"closeLottery()": "6fd09816",
							"drawNumbers()": "676c902f",
							"givePrizes()": "06d5ee54",
							"mint()": "1249c58b",
							"startNewRound()": "bd85948c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numbers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_powerball\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"givePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":{\"keccak256\":\"0x165fa5f9b66bd7a71e2bf441e777bd29515e9529d2abb56bb3d6fc24e262a926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0456e13e5e94cf7d08f3a56a246705e6154e84a4e49fca0f445365ef73e6e61\",\"dweb:/ipfs/QmSFip5iUxj7RWXNmAVHSpnuRwcJuhBc2i1vanQmubRYDk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "balance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 15,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "tickets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Ticket)6_storage)"
							},
							{
								"astId": 17,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "active",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 20,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "ticket_price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Ticket)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MyContract.Ticket)",
								"numberOfBytes": "32",
								"value": "t_struct(Ticket)6_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Ticket)6_storage": {
								"encoding": "inplace",
								"label": "struct MyContract.Ticket",
								"members": [
									{
										"astId": 3,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "numbers",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "powerball",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:20:5:\n   |\n20 |     constructor() public payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 525,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 428
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							121
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "MyContract",
							"nameLocation": "107:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.Ticket",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "185:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "180:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "180:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "powerball",
											"nameLocation": "207:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "202:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "202:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "163:6:0",
									"nodeType": "StructDefinition",
									"scope": 121,
									"src": "156:67:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "254:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 121,
									"src": "229:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "237:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "229:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 8,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "248:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "tickets",
									"nameLocation": "308:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 121,
									"src": "281:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
										"typeString": "mapping(address => struct MyContract.Ticket)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "289:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "281:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
											"typeString": "mapping(address => struct MyContract.Ticket)"
										},
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "Ticket",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "300:6:0"
											},
											"referencedDeclaration": 6,
											"src": "300:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
												"typeString": "struct MyContract.Ticket"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "active",
									"nameLocation": "343:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 121,
									"src": "338:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "338:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "ticket_price",
									"nameLocation": "405:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 121,
									"src": "400:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "400:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "420:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "456:69:0",
										"statements": [
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "465:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "465:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "465:13:0"
											},
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 27,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 30,
														"indexExpression": {
															"expression": {
																"id": 28,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "495:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "495:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "487:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "509:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "509:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "487:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "487:31:0"
											}
										]
									},
									"id": 36,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:0"
									},
									"scope": 121,
									"src": "428:97:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "562:62:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 39,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "575:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "585:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "575:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "572:45:0",
												"trueBody": {
													"expression": {
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 42,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "604:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 45,
													"nodeType": "ExpressionStatement",
													"src": "604:13:0"
												}
											}
										]
									},
									"functionSelector": "bd85948c",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "540:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:0"
									},
									"scope": 121,
									"src": "531:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "703:583:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 58,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "722:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "732:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "722:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f747465727920636c6f736564",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "738:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															},
															"value": "Lottery closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "714:41:0"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "910:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 95,
														"src": "896:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket"
														},
														"typeName": {
															"id": 65,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 64,
																"name": "Ticket",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "896:6:0"
															},
															"referencedDeclaration": 6,
															"src": "896:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
																"typeString": "struct MyContract.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"arguments": [
														{
															"id": 68,
															"name": "_numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "937:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 69,
															"name": "_powerball",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 67,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "919:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$6_storage_ptr_$",
															"typeString": "type(struct MyContract.Ticket storage pointer)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"numbers",
														"powerball"
													],
													"nodeType": "FunctionCall",
													"src": "919:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
														"typeString": "struct MyContract.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "896:75:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 72,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
																"typeString": "mapping(address => struct MyContract.Ticket storage ref)"
															}
														},
														"id": 75,
														"indexExpression": {
															"expression": {
																"id": 73,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "989:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "989:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "981:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_storage",
															"typeString": "struct MyContract.Ticket storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 76,
														"name": "ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1003:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket memory"
														}
													},
													"src": "981:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_storage",
														"typeString": "struct MyContract.Ticket storage ref"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "981:28:0"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "1025:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 95,
														"src": "1020:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"baseExpression": {
														"id": 81,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 84,
													"indexExpression": {
														"expression": {
															"id": 82,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1041:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1041:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1033:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1020:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 87,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1071:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 88,
																"name": "ticket_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1080:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1071:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56616c756520746f6f20736d616c6c",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1094:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															},
															"value": "Value too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1063:49:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 56,
												"id": 94,
												"nodeType": "Return",
												"src": "1268:11:0"
											}
										]
									},
									"functionSelector": "d6febde8",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "639:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_numbers",
												"nameLocation": "648:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "643:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_powerball",
												"nameLocation": "663:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:32:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:6:0"
									},
									"scope": 121,
									"src": "630:656:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1321:51:0",
										"statements": []
									},
									"functionSelector": "676c902f",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drawNumbers",
									"nameLocation": "1301:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:0:0"
									},
									"scope": 121,
									"src": "1292:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1406:16:0",
										"statements": []
									},
									"functionSelector": "06d5ee54",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givePrizes",
									"nameLocation": "1387:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1406:0:0"
									},
									"scope": 121,
									"src": "1378:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1450:8:0",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1437:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:0:0"
									},
									"scope": 121,
									"src": "1428:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1494:94:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 111,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1507:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1517:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1507:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "1504:45:0",
												"trueBody": {
													"expression": {
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 114,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1535:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "66616c7365",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "1535:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 117,
													"nodeType": "ExpressionStatement",
													"src": "1535:14:0"
												}
											}
										]
									},
									"functionSelector": "6fd09816",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closeLottery",
									"nameLocation": "1473:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1485:2:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:0"
									},
									"scope": 121,
									"src": "1464:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 122,
							"src": "98:1492:0",
							"usedErrors": []
						}
					],
					"src": "32:1559:0"
				},
				"id": 0
			}
		}
	}
}