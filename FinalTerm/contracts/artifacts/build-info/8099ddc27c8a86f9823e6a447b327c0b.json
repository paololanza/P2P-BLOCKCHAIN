{
	"id": "8099ddc27c8a86f9823e6a447b327c0b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\n// Contract example used in the slides\ncontract MyContract {\n\n    //create a structure ticket\n    struct ticket {\n        uint [5] numbers;\n        uint powerball;\n    }\n\n    mapping(address => uint[]) NFTList; //user's NFTs\n    mapping(address => ticket) tickets; //user's tickets\n    bool active; //true if a round is active, false otherwise\n    uint ticket_price;\n\n    constructor() {\n       active = true;\n    }\n\n    function startNewRound() public{\n        if(active == false)\n            active = true;\n    }\n\n    function buy(uint _numbers, uint _powerball) public payable returns(bool){\n        //create an istance of ticket type\n\n        uint money = msg.value;\n\n        require(money >= ticket_price, \"Value too small\");\n\n        //add the ticket into dataset\n\n        if(money > ticket_price)\n            payable(msg.sender).transfer(msg.value - ticket_price);\n    }\n\n    function drawNumbers() public{\n        //include a ethereum random service\n    }\n\n    function givePrizes() public{\n        \n    }\n\n    function mint() public{\n\n    }\n\n    function closeLottery() public{\n        if(active == true)\n            active = false;\n\n        //resetta le strutture\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numbers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_powerball",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "givePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":96:1238  contract MyContract {... */\n  mstore(0x40, 0x80)\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":429:472  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":461:465  true */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":452:458  active */\n  0x02\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":452:465  active = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":96:1238  contract MyContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":96:1238  contract MyContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06d5ee54\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x676c902f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6fd09816\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd85948c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6febde8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1026:1070  function givePrizes() public{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1076:1106  function mint() public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":940:1020  function drawNumbers() public{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1112:1236  function closeLottery() public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":478:571  function startNewRound() public{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":577:934  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1026:1070  function givePrizes() public{... */\n    tag_10:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1076:1106  function mint() public{... */\n    tag_13:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":940:1020  function drawNumbers() public{... */\n    tag_16:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1112:1236  function closeLottery() public{... */\n    tag_19:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1165:1169  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1155:1169  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1155:1161  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1155:1169  active == true */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1152:1197  if(active == true)... */\n      tag_33\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1192:1197  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1183:1189  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1183:1197  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1152:1197  if(active == true)... */\n    tag_33:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1112:1236  function closeLottery() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":478:571  function startNewRound() public{... */\n    tag_22:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":532:537  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":522:537  active == false */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":522:528  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":522:537  active == false */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":519:564  if(active == false)... */\n      tag_35\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":560:564  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":551:557  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":551:564  active = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":519:564  if(active == false)... */\n    tag_35:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":478:571  function startNewRound() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":577:934  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_26:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":645:649  bool */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":704:714  uint money */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":717:726  msg.value */\n      callvalue\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":704:726  uint money = msg.value */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":754:766  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":745:750  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":745:766  money >= ticket_price */\n      lt\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":737:786  require(money >= ticket_price, \"Value too small\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":847:859  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":839:844  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":839:859  money > ticket_price */\n      gt\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":836:927  if(money > ticket_price)... */\n      iszero\n      tag_40\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":881:891  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":873:901  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":873:927  payable(msg.sender).transfer(msg.value - ticket_price) */\n      0x08fc\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":914:926  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":902:911  msg.value */\n      callvalue\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":902:926  msg.value - ticket_price */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":873:927  payable(msg.sender).transfer(msg.value - ticket_price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":836:927  if(money > ticket_price)... */\n    tag_40:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":650:934  {... */\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":577:934  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_46:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_48:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_49:\n        /* \"#utility.yul\":490:514   */\n      tag_63\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_48\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_64:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_50:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_66\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_49\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_25:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_69\n      tag_46\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":783:902   */\n    tag_68:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_70\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_50\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_71\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_50\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1260   */\n    tag_51:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1247:1252   */\n      dup2\n        /* \"#utility.yul\":1240:1253   */\n      iszero\n        /* \"#utility.yul\":1233:1254   */\n      iszero\n        /* \"#utility.yul\":1222:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1266:1375   */\n    tag_52:\n        /* \"#utility.yul\":1347:1368   */\n      tag_74\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1347:1368   */\n      tag_51\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1369   */\n      mstore\n        /* \"#utility.yul\":1266:1375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1591   */\n    tag_28:\n        /* \"#utility.yul\":1468:1472   */\n      0x00\n        /* \"#utility.yul\":1506:1508   */\n      0x20\n        /* \"#utility.yul\":1495:1504   */\n      dup3\n        /* \"#utility.yul\":1491:1509   */\n      add\n        /* \"#utility.yul\":1483:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1584   */\n      tag_76\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1566:1583   */\n      add\n        /* \"#utility.yul\":1557:1563   */\n      dup5\n        /* \"#utility.yul\":1519:1584   */\n      tag_52\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1381:1591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1597:1766   */\n    tag_53:\n        /* \"#utility.yul\":1681:1692   */\n      0x00\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1710:1713   */\n      dup3\n        /* \"#utility.yul\":1703:1722   */\n      mstore\n        /* \"#utility.yul\":1755:1759   */\n      0x20\n        /* \"#utility.yul\":1750:1753   */\n      dup3\n        /* \"#utility.yul\":1746:1760   */\n      add\n        /* \"#utility.yul\":1731:1760   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1937   */\n    tag_54:\n        /* \"#utility.yul\":1912:1929   */\n      0x56616c756520746f6f20736d616c6c0000000000000000000000000000000000\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1900:1906   */\n      dup3\n        /* \"#utility.yul\":1896:1910   */\n      add\n        /* \"#utility.yul\":1889:1930   */\n      mstore\n        /* \"#utility.yul\":1772:1937   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2309   */\n    tag_55:\n        /* \"#utility.yul\":2085:2088   */\n      0x00\n        /* \"#utility.yul\":2106:2173   */\n      tag_80\n        /* \"#utility.yul\":2170:2172   */\n      0x0f\n        /* \"#utility.yul\":2165:2168   */\n      dup4\n        /* \"#utility.yul\":2106:2173   */\n      tag_53\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2099:2173   */\n      swap2\n      pop\n        /* \"#utility.yul\":2182:2275   */\n      tag_81\n        /* \"#utility.yul\":2271:2274   */\n      dup3\n        /* \"#utility.yul\":2182:2275   */\n      tag_54\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2300:2302   */\n      0x20\n        /* \"#utility.yul\":2295:2298   */\n      dup3\n        /* \"#utility.yul\":2291:2303   */\n      add\n        /* \"#utility.yul\":2284:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2734   */\n    tag_39:\n        /* \"#utility.yul\":2481:2485   */\n      0x00\n        /* \"#utility.yul\":2519:2521   */\n      0x20\n        /* \"#utility.yul\":2508:2517   */\n      dup3\n        /* \"#utility.yul\":2504:2522   */\n      add\n        /* \"#utility.yul\":2496:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2568:2577   */\n      dup2\n        /* \"#utility.yul\":2562:2566   */\n      dup2\n        /* \"#utility.yul\":2558:2578   */\n      sub\n        /* \"#utility.yul\":2554:2555   */\n      0x00\n        /* \"#utility.yul\":2543:2552   */\n      dup4\n        /* \"#utility.yul\":2539:2556   */\n      add\n        /* \"#utility.yul\":2532:2579   */\n      mstore\n        /* \"#utility.yul\":2596:2727   */\n      tag_83\n        /* \"#utility.yul\":2722:2726   */\n      dup2\n        /* \"#utility.yul\":2596:2727   */\n      tag_55\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2588:2727   */\n      swap1\n      pop\n        /* \"#utility.yul\":2315:2734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2740:2920   */\n    tag_56:\n        /* \"#utility.yul\":2788:2865   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2785:2786   */\n      0x00\n        /* \"#utility.yul\":2778:2866   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x11\n        /* \"#utility.yul\":2882:2883   */\n      0x04\n        /* \"#utility.yul\":2875:2890   */\n      mstore\n        /* \"#utility.yul\":2909:2913   */\n      0x24\n        /* \"#utility.yul\":2906:2907   */\n      0x00\n        /* \"#utility.yul\":2899:2914   */\n      revert\n        /* \"#utility.yul\":2926:3117   */\n    tag_42:\n        /* \"#utility.yul\":2966:2970   */\n      0x00\n        /* \"#utility.yul\":2986:3006   */\n      tag_86\n        /* \"#utility.yul\":3004:3005   */\n      dup3\n        /* \"#utility.yul\":2986:3006   */\n      tag_48\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2981:3006   */\n      swap2\n      pop\n        /* \"#utility.yul\":3020:3040   */\n      tag_87\n        /* \"#utility.yul\":3038:3039   */\n      dup4\n        /* \"#utility.yul\":3020:3040   */\n      tag_48\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3015:3040   */\n      swap3\n      pop\n        /* \"#utility.yul\":3059:3060   */\n      dup3\n        /* \"#utility.yul\":3056:3057   */\n      dup3\n        /* \"#utility.yul\":3053:3061   */\n      lt\n        /* \"#utility.yul\":3050:3084   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3064:3082   */\n      tag_89\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3050:3084   */\n    tag_88:\n        /* \"#utility.yul\":3109:3110   */\n      dup3\n        /* \"#utility.yul\":3106:3107   */\n      dup3\n        /* \"#utility.yul\":3102:3111   */\n      sub\n        /* \"#utility.yul\":3094:3111   */\n      swap1\n      pop\n        /* \"#utility.yul\":2926:3117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d36943155691f3af9f6fb573d45d7c2624d54ae21aae9c4858235eb0acf6c1fa64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600260006101000a81548160ff0219169083151502179055506103ed8061003b6000396000f3fe6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e29190610261565b610175565b6040516100f491906102bc565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b6000803490506003548110156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610334565b60405180910390fd5b60035481111561021f573373ffffffffffffffffffffffffffffffffffffffff166108fc600354346101f29190610383565b9081150290604051600060405180830381858888f1935050505015801561021d573d6000803e3d6000fd5b505b5092915050565b600080fd5b6000819050919050565b61023e8161022b565b811461024957600080fd5b50565b60008135905061025b81610235565b92915050565b6000806040838503121561027857610277610226565b5b60006102868582860161024c565b92505060206102978582860161024c565b9150509250929050565b60008115159050919050565b6102b6816102a1565b82525050565b60006020820190506102d160008301846102ad565b92915050565b600082825260208201905092915050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b600061031e600f836102d7565b9150610329826102e8565b602082019050919050565b6000602082019050818103600083015261034d81610311565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061038e8261022b565b91506103998361022b565b9250828210156103ac576103ab610354565b5b82820390509291505056fea2646970667358221220d36943155691f3af9f6fb573d45d7c2624d54ae21aae9c4858235eb0acf6c1fa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3ED DUP1 PUSH2 0x3B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x21F JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x383 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x22B JUMP JUMPDEST DUP2 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B DUP2 PUSH2 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x278 JUMPI PUSH2 0x277 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x286 DUP6 DUP3 DUP7 ADD PUSH2 0x24C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x297 DUP6 DUP3 DUP7 ADD PUSH2 0x24C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x2A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E PUSH1 0xF DUP4 PUSH2 0x2D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x329 DUP3 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D DUP2 PUSH2 0x311 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP3 PUSH2 0x22B JUMP JUMPDEST SWAP2 POP PUSH2 0x399 DUP4 PUSH2 0x22B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3AC JUMPI PUSH2 0x3AB PUSH2 0x354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 PUSH10 0x43155691F3AF9F6FB573 0xD4 0x5D PUSH29 0x2624D54AE21AAE9C4858235EB0ACF6C1FA64736F6C634300080D003300 ",
							"sourceMap": "96:1142:0:-:0;;;429:43;;;;;;;;;;461:4;452:6;;:13;;;;;;;;;;;;;;;;;;96:1142;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_80": {
									"entryPoint": 373,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@closeLottery_104": {
									"entryPoint": 259,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drawNumbers_84": {
									"entryPoint": 257,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givePrizes_88": {
									"entryPoint": 253,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_92": {
									"entryPoint": 255,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startNewRound_42": {
									"entryPoint": 316,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3120:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1247:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1240:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1204:7:1",
														"type": ""
													}
												],
												"src": "1170:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1362:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:1",
														"type": ""
													}
												],
												"src": "1266:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1557:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1581:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1566:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1519:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1457:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1468:4:1",
														"type": ""
													}
												],
												"src": "1381:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1693:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1710:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1703:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1731:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1731:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1665:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1670:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1681:11:1",
														"type": ""
													}
												],
												"src": "1597:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:14:1"
																	},
																	{
																		"hexValue": "56616c756520746f6f20736d616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:17:1",
																		"type": "",
																		"value": "Value too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1870:6:1",
														"type": ""
													}
												],
												"src": "1772:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2165:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2106:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2271:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																	"nodeType": "YulIdentifier",
																	"src": "2182:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2284:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2295:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2284:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2085:3:1",
														"type": ""
													}
												],
												"src": "1943:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2496:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2554:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2539:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2562:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2568:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2558:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2532:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2532:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2588:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2722:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2596:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2588:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2466:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2481:4:1",
														"type": ""
													}
												],
												"src": "2315:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2768:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2785:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2778:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2885:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2875:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2906:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2909:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2740:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2981:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2986:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2981:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3038:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3020:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3015:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3062:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3064:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3064:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3056:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3059:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3053:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:8:1"
															},
															"nodeType": "YulIf",
															"src": "3050:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3094:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3106:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3109:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3094:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2957:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2960:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2966:4:1",
														"type": ""
													}
												],
												"src": "2926:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e29190610261565b610175565b6040516100f491906102bc565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b6000803490506003548110156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610334565b60405180910390fd5b60035481111561021f573373ffffffffffffffffffffffffffffffffffffffff166108fc600354346101f29190610383565b9081150290604051600060405180830381858888f1935050505015801561021d573d6000803e3d6000fd5b505b5092915050565b600080fd5b6000819050919050565b61023e8161022b565b811461024957600080fd5b50565b60008135905061025b81610235565b92915050565b6000806040838503121561027857610277610226565b5b60006102868582860161024c565b92505060206102978582860161024c565b9150509250929050565b60008115159050919050565b6102b6816102a1565b82525050565b60006020820190506102d160008301846102ad565b92915050565b600082825260208201905092915050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b600061031e600f836102d7565b9150610329826102e8565b602082019050919050565b6000602082019050818103600083015261034d81610311565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061038e8261022b565b91506103998361022b565b9250828210156103ac576103ab610354565b5b82820390509291505056fea2646970667358221220d36943155691f3af9f6fb573d45d7c2624d54ae21aae9c4858235eb0acf6c1fa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x21F JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x383 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x22B JUMP JUMPDEST DUP2 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B DUP2 PUSH2 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x278 JUMPI PUSH2 0x277 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x286 DUP6 DUP3 DUP7 ADD PUSH2 0x24C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x297 DUP6 DUP3 DUP7 ADD PUSH2 0x24C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x2A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E PUSH1 0xF DUP4 PUSH2 0x2D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x329 DUP3 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D DUP2 PUSH2 0x311 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP3 PUSH2 0x22B JUMP JUMPDEST SWAP2 POP PUSH2 0x399 DUP4 PUSH2 0x22B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3AC JUMPI PUSH2 0x3AB PUSH2 0x354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 PUSH10 0x43155691F3AF9F6FB573 0xD4 0x5D PUSH29 0x2624D54AE21AAE9C4858235EB0ACF6C1FA64736F6C634300080D003300 ",
							"sourceMap": "96:1142:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:44;;;;;;;;;;;;;:::i;:::-;;1076:30;;;;;;;;;;;;;:::i;:::-;;940:80;;;;;;;;;;;;;:::i;:::-;;1112:124;;;;;;;;;;;;;:::i;:::-;;478:93;;;;;;;;;;;;;:::i;:::-;;577:357;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:44;:::o;1076:30::-;:::o;940:80::-;:::o;1112:124::-;1165:4;1155:14;;:6;;;;;;;;;;;:14;;;1152:45;;1192:5;1183:6;;:14;;;;;;;;;;;;;;;;;;1152:45;1112:124::o;478:93::-;532:5;522:15;;:6;;;;;;;;;;;:15;;;519:45;;560:4;551:6;;:13;;;;;;;;;;;;;;;;;;519:45;478:93::o;577:357::-;645:4;704:10;717:9;704:22;;754:12;;745:5;:21;;737:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;847:12;;839:5;:20;836:91;;;881:10;873:28;;:54;914:12;;902:9;:24;;;;:::i;:::-;873:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:91;650:284;577:357;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:109::-;1347:21;1362:5;1347:21;:::i;:::-;1342:3;1335:34;1266:109;;:::o;1381:210::-;1468:4;1506:2;1495:9;1491:18;1483:26;;1519:65;1581:1;1570:9;1566:17;1557:6;1519:65;:::i;:::-;1381:210;;;;:::o;1597:169::-;1681:11;1715:6;1710:3;1703:19;1755:4;1750:3;1746:14;1731:29;;1597:169;;;;:::o;1772:165::-;1912:17;1908:1;1900:6;1896:14;1889:41;1772:165;:::o;1943:366::-;2085:3;2106:67;2170:2;2165:3;2106:67;:::i;:::-;2099:74;;2182:93;2271:3;2182:93;:::i;:::-;2300:2;2295:3;2291:12;2284:19;;1943:366;;;:::o;2315:419::-;2481:4;2519:2;2508:9;2504:18;2496:26;;2568:9;2562:4;2558:20;2554:1;2543:9;2539:17;2532:47;2596:131;2722:4;2596:131;:::i;:::-;2588:139;;2315:419;;;:::o;2740:180::-;2788:77;2785:1;2778:88;2885:4;2882:1;2875:15;2909:4;2906:1;2899:15;2926:191;2966:4;2986:20;3004:1;2986:20;:::i;:::-;2981:25;;3020:20;3038:1;3020:20;:::i;:::-;3015:25;;3059:1;3056;3053:8;3050:34;;;3064:18;;:::i;:::-;3050:34;3109:1;3106;3102:9;3094:17;;2926:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "201000",
								"executionCost": "24512",
								"totalCost": "225512"
							},
							"external": {
								"buy(uint256,uint256)": "infinite",
								"closeLottery()": "26626",
								"drawNumbers()": "166",
								"givePrizes()": "122",
								"mint()": "144",
								"startNewRound()": "26648"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 96,
									"end": 1238,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 472,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 472,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 472,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 429,
									"end": 472,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 461,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 452,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 452,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 452,
									"end": 465,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 452,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 452,
									"end": 465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 1238,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d36943155691f3af9f6fb573d45d7c2624d54ae21aae9c4858235eb0acf6c1fa64736f6c634300080d0033",
									".code": [
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "6D5EE54"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "676C902F"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "6FD09816"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "BD85948C"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "D6FEBDE8"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 1238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1020,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1155,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1152,
											"end": 1197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1183,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1152,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1236,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 522,
											"end": 537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 519,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 519,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 560,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 551,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 551,
											"end": 564,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 551,
											"end": 564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 551,
											"end": 564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 519,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 726,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 754,
											"end": 766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 745,
											"end": 766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 786,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 847,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 847,
											"end": 859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 839,
											"end": 859,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 836,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 836,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 881,
											"end": 891,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 873,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 911,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 902,
											"end": 926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 902,
											"end": 926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 902,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 873,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 873,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 836,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 650,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1772,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1772,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "56616C756520746F6F20736D616C6C0000000000000000000000000000000000"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1937,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2165,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2271,
											"end": 2274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2182,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2309,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2315,
											"end": 2734,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2315,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2578,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2722,
											"end": 2726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2596,
											"end": 2727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2727,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2596,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2734,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2740,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2740,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2865,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2914,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3061,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 3117,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256,uint256)": "d6febde8",
							"closeLottery()": "6fd09816",
							"drawNumbers()": "676c902f",
							"givePrizes()": "06d5ee54",
							"mint()": "1249c58b",
							"startNewRound()": "bd85948c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numbers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_powerball\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"givePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":{\"keccak256\":\"0x0f1d3609cd89031bdf3dd86e79731f93f826d2809c2d29f16a869cf5f36ad092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fba243d0eedf909dcd0ef0c00c7b852b953e7cafde815c308aef1841fa830922\",\"dweb:/ipfs/QmeHeCJ3ZQrfzfuCnaK5tTczZAvuxnray3sRWthroH5Csj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "NFTList",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 18,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "tickets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(ticket)8_storage)"
							},
							{
								"astId": 20,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "active",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 22,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "ticket_price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)5_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[5]",
								"numberOfBytes": "160"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_struct(ticket)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MyContract.ticket)",
								"numberOfBytes": "32",
								"value": "t_struct(ticket)8_storage"
							},
							"t_struct(ticket)8_storage": {
								"encoding": "inplace",
								"label": "struct MyContract.ticket",
								"members": [
									{
										"astId": 5,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "numbers",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)5_storage"
									},
									{
										"astId": 7,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "powerball",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:27:73:\n   |\n27 |     function buy(uint _numbers, uint _powerball) public payable returns(bool){\n   |                                                                         ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 649,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 645
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:27:18:\n   |\n27 |     function buy(uint _numbers, uint _powerball) public payable returns(bool){\n   |                  ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 603,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 590
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:27:33:\n   |\n27 |     function buy(uint _numbers, uint _powerball) public payable returns(bool){\n   |                                 ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 620,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 605
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							105
						]
					},
					"id": 106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "MyContract",
							"nameLocation": "105:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.ticket",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "188:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "179:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
												"typeString": "uint256[5]"
											},
											"typeName": {
												"baseType": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4,
												"length": {
													"hexValue": "35",
													"id": 3,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "185:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"nodeType": "ArrayTypeName",
												"src": "179:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
													"typeString": "uint256[5]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "powerball",
											"nameLocation": "210:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "205:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "205:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ticket",
									"nameLocation": "162:6:0",
									"nodeType": "StructDefinition",
									"scope": 105,
									"src": "155:71:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "NFTList",
									"nameLocation": "259:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "232:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 12,
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "240:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "232:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 10,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "251:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 11,
											"nodeType": "ArrayTypeName",
											"src": "251:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "tickets",
									"nameLocation": "313:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "286:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ticket_$8_storage_$",
										"typeString": "mapping(address => struct MyContract.ticket)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "294:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "286:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ticket_$8_storage_$",
											"typeString": "mapping(address => struct MyContract.ticket)"
										},
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "ticket",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "305:6:0"
											},
											"referencedDeclaration": 8,
											"src": "305:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ticket_$8_storage_ptr",
												"typeString": "struct MyContract.ticket"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "active",
									"nameLocation": "348:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "343:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 19,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "343:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "ticket_price",
									"nameLocation": "410:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "405:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "405:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "443:29:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "452:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "461:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "452:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "452:13:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:0:0"
									},
									"scope": 105,
									"src": "429:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "509:62:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 33,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "522:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "532:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "522:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"nodeType": "IfStatement",
												"src": "519:45:0",
												"trueBody": {
													"expression": {
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 36,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "560:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "551:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 39,
													"nodeType": "ExpressionStatement",
													"src": "551:13:0"
												}
											}
										]
									},
									"functionSelector": "bd85948c",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "487:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "509:0:0"
									},
									"scope": 105,
									"src": "478:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "650:284:0",
										"statements": [
											{
												"assignments": [
													52
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "709:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "704:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 51,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"expression": {
														"id": 53,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "717:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "717:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "704:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "745:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 58,
																"name": "ticket_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "754:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "745:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56616c756520746f6f20736d616c6c",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "768:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															},
															"value": "Value too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "737:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 63,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "839:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 64,
														"name": "ticket_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "847:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "839:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "836:91:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 72,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "902:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "902:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 74,
																	"name": "ticket_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "914:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "902:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 68,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "881:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "881:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "873:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 66,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "873:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "873:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "873:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "873:54:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 77,
													"nodeType": "ExpressionStatement",
													"src": "873:54:0"
												}
											}
										]
									},
									"functionSelector": "d6febde8",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "586:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_numbers",
												"nameLocation": "595:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "590:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_powerball",
												"nameLocation": "610:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "605:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:32:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "645:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:6:0"
									},
									"scope": 105,
									"src": "577:357:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "969:51:0",
										"statements": []
									},
									"functionSelector": "676c902f",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drawNumbers",
									"nameLocation": "949:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:0"
									},
									"scope": 105,
									"src": "940:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1054:16:0",
										"statements": []
									},
									"functionSelector": "06d5ee54",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givePrizes",
									"nameLocation": "1035:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:0:0"
									},
									"scope": 105,
									"src": "1026:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1098:8:0",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1085:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:0:0"
									},
									"scope": 105,
									"src": "1076:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1142:94:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1155:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1165:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1155:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "IfStatement",
												"src": "1152:45:0",
												"trueBody": {
													"expression": {
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 98,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "66616c7365",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "1183:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 101,
													"nodeType": "ExpressionStatement",
													"src": "1183:14:0"
												}
											}
										]
									},
									"functionSelector": "6fd09816",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closeLottery",
									"nameLocation": "1121:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:0"
									},
									"scope": 105,
									"src": "1112:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 106,
							"src": "96:1142:0",
							"usedErrors": []
						}
					],
					"src": "32:1207:0"
				},
				"id": 0
			}
		}
	}
}