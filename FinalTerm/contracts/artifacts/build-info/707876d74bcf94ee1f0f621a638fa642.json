{
	"id": "707876d74bcf94ee1f0f621a638fa642",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\ncontract MyContract{\n\n    //create a structure ticket\n    struct Ticket {\n        uint numbers;\n        uint powerball;\n    }\n\n    mapping(address => uint) balance; //user's NFTs\n    mapping(address => Ticket) tickets; //user's tickets\n    bool active; //true if a round is active, false otherwise\n    address owner;\n    uint ticket_price = 1000000000000000000;\n\n    constructor() public payable{\n       active = true;\n       owner = msg.sender;\n       balance[msg.sender] = msg.value;\n    }\n\n    function startNewRound() public{\n        if(active == false)\n            active = true;\n    }\n\n    function buy(uint _numbers, uint _powerball) public payable returns(bool){\n\n        require(active == true, \"Lottery closed\");\n        require(msg.sender == owner);\n\n        //check if the numbers are ok\n\n        //create an istance of ticket type\n        //TODO: passare la lista come parametro\n        Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball});\n        tickets[msg.sender] = ticket;\n\n        uint money = balance[msg.sender];\n        balance[msg.sender] = money-ticket_price;\n\n        require(money >= ticket_price, \"Value too small\");\n\n        //add the ticket into dataset\n\n        if(money > ticket_price)\n            payable(owner).transfer(msg.value - ticket_price);\n\n        return true;\n    }\n\n    function drawNumbers() public{\n        //include a ethereum random service\n    }\n\n    function givePrizes() public{\n        \n    }\n\n    function mint() public{\n\n    }\n\n    function closeLottery() public{\n        if(active == true)\n            active = false;\n\n        //resetta le strutture\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numbers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_powerball",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "givePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1692  contract MyContract{... */\n  mstore(0x40, 0x80)\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":398:417  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":378:417  uint ticket_price = 1000000000000000000 */\n  0x03\n  sstore\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":470:474  true */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":461:467  active */\n  0x02\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":461:474  active = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":491:501  msg.sender */\n  caller\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":483:488  owner */\n  0x02\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":483:501  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":532:541  msg.value */\n  callvalue\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":510:517  balance */\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":510:529  balance[msg.sender] */\n  dup1\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":518:528  msg.sender */\n  caller\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":510:529  balance[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":510:541  balance[msg.sender] = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1692  contract MyContract{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1692  contract MyContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06d5ee54\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x676c902f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6fd09816\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd85948c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6febde8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1480:1524  function givePrizes() public{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1530:1560  function mint() public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1394:1474  function drawNumbers() public{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1566:1690  function closeLottery() public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":554:647  function startNewRound() public{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":653:1388  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1480:1524  function givePrizes() public{... */\n    tag_10:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1530:1560  function mint() public{... */\n    tag_13:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1394:1474  function drawNumbers() public{... */\n    tag_16:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1566:1690  function closeLottery() public{... */\n    tag_19:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1619:1623  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1609:1623  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1609:1615  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1609:1623  active == true */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1606:1651  if(active == true)... */\n      tag_33\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1646:1651  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1637:1643  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1637:1651  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1606:1651  if(active == true)... */\n    tag_33:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1566:1690  function closeLottery() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":554:647  function startNewRound() public{... */\n    tag_22:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":608:613  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":598:613  active == false */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":598:604  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":598:613  active == false */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":595:640  if(active == false)... */\n      tag_35\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":636:640  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":627:633  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":627:640  active = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":595:640  if(active == false)... */\n    tag_35:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":554:647  function startNewRound() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":653:1388  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_26:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":721:725  bool */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":755:759  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":745:759  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":745:751  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":745:759  active == true */\n      iszero\n      iszero\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":737:778  require(active == true, \"Lottery closed\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":810:815  owner */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":796:815  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":796:806  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":796:815  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":788:816  require(msg.sender == owner) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":957:977  Ticket memory ticket */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":980:1032  Ticket({numbers : _numbers, powerball : _powerball}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":998:1006  _numbers */\n      dup6\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":980:1032  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1020:1030  _powerball */\n      dup5\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":980:1032  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":957:1032  Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball}) */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1064:1070  ticket */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1042:1049  tickets */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1042:1061  tickets[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1050:1060  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1042:1061  tickets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1042:1070  tickets[msg.sender] = ticket */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1081:1091  uint money */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1094:1101  balance */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1094:1113  balance[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1102:1112  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1094:1113  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1081:1113  uint money = balance[msg.sender] */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1151:1163  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1145:1150  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1145:1163  money-ticket_price */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1123:1130  balance */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1123:1142  balance[msg.sender] */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1131:1141  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1123:1142  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1123:1163  balance[msg.sender] = money-ticket_price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1191:1203  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1182:1187  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1182:1203  money >= ticket_price */\n      lt\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1174:1223  require(money >= ticket_price, \"Value too small\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1284:1296  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1276:1281  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1276:1296  money > ticket_price */\n      gt\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1273:1359  if(money > ticket_price)... */\n      iszero\n      tag_46\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1318:1323  owner */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1310:1333  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1310:1359  payable(owner).transfer(msg.value - ticket_price) */\n      0x08fc\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1346:1358  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1334:1343  msg.value */\n      callvalue\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1334:1358  msg.value - ticket_price */\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1310:1359  payable(owner).transfer(msg.value - ticket_price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1273:1359  if(money > ticket_price)... */\n    tag_46:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1377:1381  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1370:1381  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":653:1388  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_51:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_53:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_54:\n        /* \"#utility.yul\":490:514   */\n      tag_70\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_53\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_71:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_55:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_73\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_54\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_25:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_76\n      tag_51\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":783:902   */\n    tag_75:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_77\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_55\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_78\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_55\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1260   */\n    tag_56:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1247:1252   */\n      dup2\n        /* \"#utility.yul\":1240:1253   */\n      iszero\n        /* \"#utility.yul\":1233:1254   */\n      iszero\n        /* \"#utility.yul\":1222:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1266:1375   */\n    tag_57:\n        /* \"#utility.yul\":1347:1368   */\n      tag_81\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1347:1368   */\n      tag_56\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1369   */\n      mstore\n        /* \"#utility.yul\":1266:1375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1591   */\n    tag_28:\n        /* \"#utility.yul\":1468:1472   */\n      0x00\n        /* \"#utility.yul\":1506:1508   */\n      0x20\n        /* \"#utility.yul\":1495:1504   */\n      dup3\n        /* \"#utility.yul\":1491:1509   */\n      add\n        /* \"#utility.yul\":1483:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1584   */\n      tag_83\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1566:1583   */\n      add\n        /* \"#utility.yul\":1557:1563   */\n      dup5\n        /* \"#utility.yul\":1519:1584   */\n      tag_57\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1381:1591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1597:1766   */\n    tag_58:\n        /* \"#utility.yul\":1681:1692   */\n      0x00\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1710:1713   */\n      dup3\n        /* \"#utility.yul\":1703:1722   */\n      mstore\n        /* \"#utility.yul\":1755:1759   */\n      0x20\n        /* \"#utility.yul\":1750:1753   */\n      dup3\n        /* \"#utility.yul\":1746:1760   */\n      add\n        /* \"#utility.yul\":1731:1760   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1936   */\n    tag_59:\n        /* \"#utility.yul\":1912:1928   */\n      0x4c6f747465727920636c6f736564000000000000000000000000000000000000\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1900:1906   */\n      dup3\n        /* \"#utility.yul\":1896:1910   */\n      add\n        /* \"#utility.yul\":1889:1929   */\n      mstore\n        /* \"#utility.yul\":1772:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2308   */\n    tag_60:\n        /* \"#utility.yul\":2084:2087   */\n      0x00\n        /* \"#utility.yul\":2105:2172   */\n      tag_87\n        /* \"#utility.yul\":2169:2171   */\n      0x0e\n        /* \"#utility.yul\":2164:2167   */\n      dup4\n        /* \"#utility.yul\":2105:2172   */\n      tag_58\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2098:2172   */\n      swap2\n      pop\n        /* \"#utility.yul\":2181:2274   */\n      tag_88\n        /* \"#utility.yul\":2270:2273   */\n      dup3\n        /* \"#utility.yul\":2181:2274   */\n      tag_59\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2299:2301   */\n      0x20\n        /* \"#utility.yul\":2294:2297   */\n      dup3\n        /* \"#utility.yul\":2290:2302   */\n      add\n        /* \"#utility.yul\":2283:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":1942:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2733   */\n    tag_39:\n        /* \"#utility.yul\":2480:2484   */\n      0x00\n        /* \"#utility.yul\":2518:2520   */\n      0x20\n        /* \"#utility.yul\":2507:2516   */\n      dup3\n        /* \"#utility.yul\":2503:2521   */\n      add\n        /* \"#utility.yul\":2495:2521   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2576   */\n      dup2\n        /* \"#utility.yul\":2561:2565   */\n      dup2\n        /* \"#utility.yul\":2557:2577   */\n      sub\n        /* \"#utility.yul\":2553:2554   */\n      0x00\n        /* \"#utility.yul\":2542:2551   */\n      dup4\n        /* \"#utility.yul\":2538:2555   */\n      add\n        /* \"#utility.yul\":2531:2578   */\n      mstore\n        /* \"#utility.yul\":2595:2726   */\n      tag_90\n        /* \"#utility.yul\":2721:2725   */\n      dup2\n        /* \"#utility.yul\":2595:2726   */\n      tag_60\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2587:2726   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2739:2919   */\n    tag_61:\n        /* \"#utility.yul\":2787:2864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2784:2785   */\n      0x00\n        /* \"#utility.yul\":2777:2865   */\n      mstore\n        /* \"#utility.yul\":2884:2888   */\n      0x11\n        /* \"#utility.yul\":2881:2882   */\n      0x04\n        /* \"#utility.yul\":2874:2889   */\n      mstore\n        /* \"#utility.yul\":2908:2912   */\n      0x24\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2898:2913   */\n      revert\n        /* \"#utility.yul\":2925:3116   */\n    tag_42:\n        /* \"#utility.yul\":2965:2969   */\n      0x00\n        /* \"#utility.yul\":2985:3005   */\n      tag_93\n        /* \"#utility.yul\":3003:3004   */\n      dup3\n        /* \"#utility.yul\":2985:3005   */\n      tag_53\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2980:3005   */\n      swap2\n      pop\n        /* \"#utility.yul\":3019:3039   */\n      tag_94\n        /* \"#utility.yul\":3037:3038   */\n      dup4\n        /* \"#utility.yul\":3019:3039   */\n      tag_53\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3014:3039   */\n      swap3\n      pop\n        /* \"#utility.yul\":3058:3059   */\n      dup3\n        /* \"#utility.yul\":3055:3056   */\n      dup3\n        /* \"#utility.yul\":3052:3060   */\n      lt\n        /* \"#utility.yul\":3049:3083   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3063:3081   */\n      tag_96\n      tag_61\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3049:3083   */\n    tag_95:\n        /* \"#utility.yul\":3108:3109   */\n      dup3\n        /* \"#utility.yul\":3105:3106   */\n      dup3\n        /* \"#utility.yul\":3101:3110   */\n      sub\n        /* \"#utility.yul\":3093:3110   */\n      swap1\n      pop\n        /* \"#utility.yul\":2925:3116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3122:3287   */\n    tag_62:\n        /* \"#utility.yul\":3262:3279   */\n      0x56616c756520746f6f20736d616c6c0000000000000000000000000000000000\n        /* \"#utility.yul\":3258:3259   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup3\n        /* \"#utility.yul\":3246:3260   */\n      add\n        /* \"#utility.yul\":3239:3280   */\n      mstore\n        /* \"#utility.yul\":3122:3287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3293:3659   */\n    tag_63:\n        /* \"#utility.yul\":3435:3438   */\n      0x00\n        /* \"#utility.yul\":3456:3523   */\n      tag_99\n        /* \"#utility.yul\":3520:3522   */\n      0x0f\n        /* \"#utility.yul\":3515:3518   */\n      dup4\n        /* \"#utility.yul\":3456:3523   */\n      tag_58\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3449:3523   */\n      swap2\n      pop\n        /* \"#utility.yul\":3532:3625   */\n      tag_100\n        /* \"#utility.yul\":3621:3624   */\n      dup3\n        /* \"#utility.yul\":3532:3625   */\n      tag_62\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3650:3652   */\n      0x20\n        /* \"#utility.yul\":3645:3648   */\n      dup3\n        /* \"#utility.yul\":3641:3653   */\n      add\n        /* \"#utility.yul\":3634:3653   */\n      swap1\n      pop\n        /* \"#utility.yul\":3293:3659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3665:4084   */\n    tag_45:\n        /* \"#utility.yul\":3831:3835   */\n      0x00\n        /* \"#utility.yul\":3869:3871   */\n      0x20\n        /* \"#utility.yul\":3858:3867   */\n      dup3\n        /* \"#utility.yul\":3854:3872   */\n      add\n        /* \"#utility.yul\":3846:3872   */\n      swap1\n      pop\n        /* \"#utility.yul\":3918:3927   */\n      dup2\n        /* \"#utility.yul\":3912:3916   */\n      dup2\n        /* \"#utility.yul\":3908:3928   */\n      sub\n        /* \"#utility.yul\":3904:3905   */\n      0x00\n        /* \"#utility.yul\":3893:3902   */\n      dup4\n        /* \"#utility.yul\":3889:3906   */\n      add\n        /* \"#utility.yul\":3882:3929   */\n      mstore\n        /* \"#utility.yul\":3946:4077   */\n      tag_102\n        /* \"#utility.yul\":4072:4076   */\n      dup2\n        /* \"#utility.yul\":3946:4077   */\n      tag_63\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3938:4077   */\n      swap1\n      pop\n        /* \"#utility.yul\":3665:4084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122028bc6559f23239d68c281af5c09bf40bf991914ce0526be5416872987830d9c264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006003556001600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061062f806100be6000396000f3fe6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e29190610437565b610175565b6040516100f49190610492565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b600060011515600260009054906101000a900460ff161515146101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c49061050a565b60405180910390fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022757600080fd5b6000604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600354816102e89190610559565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060035481101561036f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610366906105d9565b60405180910390fd5b6003548111156103f057600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600354346103c39190610559565b9081150290604051600060405180830381858888f193505050501580156103ee573d6000803e3d6000fd5b505b60019250505092915050565b600080fd5b6000819050919050565b61041481610401565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b6000806040838503121561044e5761044d6103fc565b5b600061045c85828601610422565b925050602061046d85828601610422565b9150509250929050565b60008115159050919050565b61048c81610477565b82525050565b60006020820190506104a76000830184610483565b92915050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b60006104f4600e836104ad565b91506104ff826104be565b602082019050919050565b60006020820190508181036000830152610523816104e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061056482610401565b915061056f83610401565b9250828210156105825761058161052a565b5b828203905092915050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b60006105c3600f836104ad565b91506105ce8261058d565b602082019050919050565b600060208201905081810360008301526105f2816105b6565b905091905056fea264697066735822122028bc6559f23239d68c281af5c09bf40bf991914ce0526be5416872987830d9c264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x62F DUP1 PUSH2 0xBE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4 SWAP1 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x366 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x401 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44E JUMPI PUSH2 0x44D PUSH2 0x3FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP6 DUP3 DUP7 ADD PUSH2 0x422 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x46D DUP6 DUP3 DUP7 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48C DUP2 PUSH2 0x477 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 PUSH1 0xE DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF DUP3 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x523 DUP2 PUSH2 0x4E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x564 DUP3 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP PUSH2 0x56F DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x52A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C3 PUSH1 0xF DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP2 POP PUSH2 0x5CE DUP3 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F2 DUP2 PUSH2 0x5B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xBC PUSH6 0x59F23239D68C 0x28 BYTE CREATE2 0xC0 SWAP12 DELEGATECALL SIGNEXTEND 0xF9 SWAP2 SWAP2 0x4C 0xE0 MSTORE PUSH12 0xE5416872987830D9C264736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "57:1635:0:-:0;;;398:19;378:39;;470:4;461:6;;:13;;;;;;;;;;;;;;;;;;491:10;483:5;;:18;;;;;;;;;;;;;;;;;;532:9;510:7;:19;518:10;510:19;;;;;;;;;;;;;;;:31;;;;57:1635;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_134": {
									"entryPoint": 373,
									"id": 134,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@closeLottery_158": {
									"entryPoint": 259,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drawNumbers_138": {
									"entryPoint": 257,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givePrizes_142": {
									"entryPoint": 253,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startNewRound_55": {
									"entryPoint": 316,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4087:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1247:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1240:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1204:7:1",
														"type": ""
													}
												],
												"src": "1170:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1362:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:1",
														"type": ""
													}
												],
												"src": "1266:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1557:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1581:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1566:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1519:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1457:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1468:4:1",
														"type": ""
													}
												],
												"src": "1381:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1693:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1710:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1703:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1731:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1731:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1665:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1670:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1681:11:1",
														"type": ""
													}
												],
												"src": "1597:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:14:1"
																	},
																	{
																		"hexValue": "4c6f747465727920636c6f736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:16:1",
																		"type": "",
																		"value": "Lottery closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1870:6:1",
														"type": ""
													}
												],
												"src": "1772:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2105:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																	"nodeType": "YulIdentifier",
																	"src": "2181:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2283:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2084:3:1",
														"type": ""
													}
												],
												"src": "1942:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2553:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2561:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2567:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2557:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2587:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2721:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2595:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2587:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2465:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2480:4:1",
														"type": ""
													}
												],
												"src": "2314:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2787:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2884:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2874:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2874:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2908:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2898:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2739:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2970:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2980:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3003:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2985:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2980:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3014:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3037:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3019:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3014:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3061:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3063:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3063:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3063:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3055:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3058:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:8:1"
															},
															"nodeType": "YulIf",
															"src": "3049:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3093:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3105:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3108:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3093:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2956:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2959:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2965:4:1",
														"type": ""
													}
												],
												"src": "2925:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3250:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3258:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:14:1"
																	},
																	{
																		"hexValue": "56616c756520746f6f20736d616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3262:17:1",
																		"type": "",
																		"value": "Value too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3239:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3220:6:1",
														"type": ""
													}
												],
												"src": "3122:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3439:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3449:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3515:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3520:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3456:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3449:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3621:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																	"nodeType": "YulIdentifier",
																	"src": "3532:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3532:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3634:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3645:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3634:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3427:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:1",
														"type": ""
													}
												],
												"src": "3293:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3836:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3858:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3869:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3846:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3893:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3912:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3918:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3882:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3938:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4072:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3946:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3938:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3816:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3831:4:1",
														"type": ""
													}
												],
												"src": "3665:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lottery closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e29190610437565b610175565b6040516100f49190610492565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b600060011515600260009054906101000a900460ff161515146101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c49061050a565b60405180910390fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022757600080fd5b6000604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600354816102e89190610559565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060035481101561036f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610366906105d9565b60405180910390fd5b6003548111156103f057600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600354346103c39190610559565b9081150290604051600060405180830381858888f193505050501580156103ee573d6000803e3d6000fd5b505b60019250505092915050565b600080fd5b6000819050919050565b61041481610401565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b6000806040838503121561044e5761044d6103fc565b5b600061045c85828601610422565b925050602061046d85828601610422565b9150509250929050565b60008115159050919050565b61048c81610477565b82525050565b60006020820190506104a76000830184610483565b92915050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b60006104f4600e836104ad565b91506104ff826104be565b602082019050919050565b60006020820190508181036000830152610523816104e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061056482610401565b915061056f83610401565b9250828210156105825761058161052a565b5b828203905092915050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b60006105c3600f836104ad565b91506105ce8261058d565b602082019050919050565b600060208201905081810360008301526105f2816105b6565b905091905056fea264697066735822122028bc6559f23239d68c281af5c09bf40bf991914ce0526be5416872987830d9c264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4 SWAP1 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x366 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x401 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44E JUMPI PUSH2 0x44D PUSH2 0x3FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP6 DUP3 DUP7 ADD PUSH2 0x422 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x46D DUP6 DUP3 DUP7 ADD PUSH2 0x422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48C DUP2 PUSH2 0x477 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 PUSH1 0xE DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF DUP3 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x523 DUP2 PUSH2 0x4E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x564 DUP3 PUSH2 0x401 JUMP JUMPDEST SWAP2 POP PUSH2 0x56F DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x52A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C3 PUSH1 0xF DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP2 POP PUSH2 0x5CE DUP3 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F2 DUP2 PUSH2 0x5B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xBC PUSH6 0x59F23239D68C 0x28 BYTE CREATE2 0xC0 SWAP12 DELEGATECALL SIGNEXTEND 0xF9 SWAP2 SWAP2 0x4C 0xE0 MSTORE PUSH12 0xE5416872987830D9C264736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "57:1635:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:44;;;;;;;;;;;;;:::i;:::-;;1530:30;;;;;;;;;;;;;:::i;:::-;;1394:80;;;;;;;;;;;;;:::i;:::-;;1566:124;;;;;;;;;;;;;:::i;:::-;;554:93;;;;;;;;;;;;;:::i;:::-;;653:735;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1480:44;:::o;1530:30::-;:::o;1394:80::-;:::o;1566:124::-;1619:4;1609:14;;:6;;;;;;;;;;;:14;;;1606:45;;1646:5;1637:6;;:14;;;;;;;;;;;;;;;;;;1606:45;1566:124::o;554:93::-;608:5;598:15;;:6;;;;;;;;;;;:15;;;595:45;;636:4;627:6;;:13;;;;;;;;;;;;;;;;;;595:45;554:93::o;653:735::-;721:4;755;745:14;;:6;;;;;;;;;;;:14;;;737:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;810:5;;;;;;;;;;;796:19;;:10;:19;;;788:28;;;;;;957:20;980:52;;;;;;;;998:8;980:52;;;;1020:10;980:52;;;957:75;;1064:6;1042:7;:19;1050:10;1042:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;1081:10;1094:7;:19;1102:10;1094:19;;;;;;;;;;;;;;;;1081:32;;1151:12;;1145:5;:18;;;;:::i;:::-;1123:7;:19;1131:10;1123:19;;;;;;;;;;;;;;;:40;;;;1191:12;;1182:5;:21;;1174:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1284:12;;1276:5;:20;1273:86;;;1318:5;;;;;;;;;;;1310:23;;:49;1346:12;;1334:9;:24;;;;:::i;:::-;1310:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:86;1377:4;1370:11;;;;653:735;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:109::-;1347:21;1362:5;1347:21;:::i;:::-;1342:3;1335:34;1266:109;;:::o;1381:210::-;1468:4;1506:2;1495:9;1491:18;1483:26;;1519:65;1581:1;1570:9;1566:17;1557:6;1519:65;:::i;:::-;1381:210;;;;:::o;1597:169::-;1681:11;1715:6;1710:3;1703:19;1755:4;1750:3;1746:14;1731:29;;1597:169;;;;:::o;1772:164::-;1912:16;1908:1;1900:6;1896:14;1889:40;1772:164;:::o;1942:366::-;2084:3;2105:67;2169:2;2164:3;2105:67;:::i;:::-;2098:74;;2181:93;2270:3;2181:93;:::i;:::-;2299:2;2294:3;2290:12;2283:19;;1942:366;;;:::o;2314:419::-;2480:4;2518:2;2507:9;2503:18;2495:26;;2567:9;2561:4;2557:20;2553:1;2542:9;2538:17;2531:47;2595:131;2721:4;2595:131;:::i;:::-;2587:139;;2314:419;;;:::o;2739:180::-;2787:77;2784:1;2777:88;2884:4;2881:1;2874:15;2908:4;2905:1;2898:15;2925:191;2965:4;2985:20;3003:1;2985:20;:::i;:::-;2980:25;;3019:20;3037:1;3019:20;:::i;:::-;3014:25;;3058:1;3055;3052:8;3049:34;;;3063:18;;:::i;:::-;3049:34;3108:1;3105;3101:9;3093:17;;2925:191;;;;:::o;3122:165::-;3262:17;3258:1;3250:6;3246:14;3239:41;3122:165;:::o;3293:366::-;3435:3;3456:67;3520:2;3515:3;3456:67;:::i;:::-;3449:74;;3532:93;3621:3;3532:93;:::i;:::-;3650:2;3645:3;3641:12;3634:19;;3293:366;;;:::o;3665:419::-;3831:4;3869:2;3858:9;3854:18;3846:26;;3918:9;3912:4;3908:20;3904:1;3893:9;3889:17;3882:47;3946:131;4072:4;3946:131;:::i;:::-;3938:139;;3665:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "316600",
								"executionCost": "93222",
								"totalCost": "409822"
							},
							"external": {
								"buy(uint256,uint256)": "infinite",
								"closeLottery()": "26626",
								"drawNumbers()": "166",
								"givePrizes()": "122",
								"mint()": "144",
								"startNewRound()": "26648"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1692,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 398,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 378,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 378,
									"end": 417,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 470,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 461,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 461,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 461,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 461,
									"end": 474,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 461,
									"end": 474,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 461,
									"end": 474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 491,
									"end": 501,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 483,
									"end": 488,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 488,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 501,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 532,
									"end": 541,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 528,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 529,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 529,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 510,
									"end": 529,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 510,
									"end": 529,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 510,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 529,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 510,
									"end": 541,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 541,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028bc6559f23239d68c281af5c09bf40bf991914ce0526be5416872987830d9c264736f6c634300080d0033",
									".code": [
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "6D5EE54"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "676C902F"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "6FD09816"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "BD85948C"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "D6FEBDE8"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1524,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1606,
											"end": 1651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1651,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1606,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 598,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 598,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 598,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 598,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 598,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 598,
											"end": 613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 595,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 595,
											"end": 640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 633,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 627,
											"end": 633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 627,
											"end": 640,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 627,
											"end": 640,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 640,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 595,
											"end": 640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 647,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 745,
											"end": 759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 745,
											"end": 759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 745,
											"end": 759,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 810,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 796,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 796,
											"end": 806,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 796,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 796,
											"end": 815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 788,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 788,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 816,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 788,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1006,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1163,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1191,
											"end": 1203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1203,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1174,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1284,
											"end": 1296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1273,
											"end": 1359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1346,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1346,
											"end": 1358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1343,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1273,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 1381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 1388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "4C6F747465727920636C6F736564000000000000000000000000000000000000"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2270,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2739,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2739,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2864,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2784,
											"end": 2785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2881,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2874,
											"end": 2889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2913,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3003,
											"end": 3004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3005,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2985,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3019,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3060,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3049,
											"end": 3083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3083,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3049,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 3116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3287,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3122,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "56616C756520746F6F20736D616C6C0000000000000000000000000000000000"
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3287,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3515,
											"end": 3518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3621,
											"end": 3624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4072,
											"end": 4076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256,uint256)": "d6febde8",
							"closeLottery()": "6fd09816",
							"drawNumbers()": "676c902f",
							"givePrizes()": "06d5ee54",
							"mint()": "1249c58b",
							"startNewRound()": "bd85948c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numbers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_powerball\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"givePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":{\"keccak256\":\"0x954730c7e6ab8909e17daae0b28e2e644a0074ada7405446e6dd3b88787650cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da94103929a5950c87ad570cd8c26bf0f3d77c38c1d808a6047538ef8b51262\",\"dweb:/ipfs/QmXTjvwCLKp8HCtX8YoYCmNRLDvyeGb7wAoQPyreSQrszV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "balance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 15,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "tickets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Ticket)6_storage)"
							},
							{
								"astId": 17,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "active",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 19,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "owner",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "ticket_price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Ticket)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MyContract.Ticket)",
								"numberOfBytes": "32",
								"value": "t_struct(Ticket)6_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Ticket)6_storage": {
								"encoding": "inplace",
								"label": "struct MyContract.Ticket",
								"members": [
									{
										"astId": 3,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "numbers",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "powerball",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:18:5:\n   |\n18 |     constructor() public payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 548,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 424
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							159
						]
					},
					"id": 160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "MyContract",
							"nameLocation": "66:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.Ticket",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "144:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "139:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "powerball",
											"nameLocation": "166:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "161:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "161:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "122:6:0",
									"nodeType": "StructDefinition",
									"scope": 159,
									"src": "115:67:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "213:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "188:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "196:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "188:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 8,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "207:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "tickets",
									"nameLocation": "267:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "240:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
										"typeString": "mapping(address => struct MyContract.Ticket)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "248:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "240:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
											"typeString": "mapping(address => struct MyContract.Ticket)"
										},
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "Ticket",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "259:6:0"
											},
											"referencedDeclaration": 6,
											"src": "259:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
												"typeString": "struct MyContract.Ticket"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "active",
									"nameLocation": "302:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "297:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "297:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "367:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "359:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "ticket_price",
									"nameLocation": "383:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "378:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "378:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "398:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "452:96:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "461:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "470:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "461:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "461:13:0"
											},
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 30,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "491:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "491:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "483:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "483:18:0"
											},
											{
												"expression": {
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 34,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 37,
														"indexExpression": {
															"expression": {
																"id": 35,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "518:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "518:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "510:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 38,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "532:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "532:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "510:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "510:31:0"
											}
										]
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:0:0"
									},
									"scope": 159,
									"src": "424:124:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "585:62:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 46,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "608:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "598:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "IfStatement",
												"src": "595:45:0",
												"trueBody": {
													"expression": {
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 49,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "627:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 52,
													"nodeType": "ExpressionStatement",
													"src": "627:13:0"
												}
											}
										]
									},
									"functionSelector": "bd85948c",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "563:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "585:0:0"
									},
									"scope": 159,
									"src": "554:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "726:662:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 65,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "745:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "755:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "745:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f747465727920636c6f736564",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															},
															"value": "Lottery closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "737:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 72,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "796:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "796:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 74,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "810:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "796:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "788:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "788:28:0"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "971:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 133,
														"src": "957:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket"
														},
														"typeName": {
															"id": 79,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 78,
																"name": "Ticket",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "957:6:0"
															},
															"referencedDeclaration": 6,
															"src": "957:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
																"typeString": "struct MyContract.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"arguments": [
														{
															"id": 82,
															"name": "_numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "998:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 83,
															"name": "_powerball",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1020:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 81,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$6_storage_ptr_$",
															"typeString": "type(struct MyContract.Ticket storage pointer)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"numbers",
														"powerball"
													],
													"nodeType": "FunctionCall",
													"src": "980:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
														"typeString": "struct MyContract.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "957:75:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 86,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
																"typeString": "mapping(address => struct MyContract.Ticket storage ref)"
															}
														},
														"id": 89,
														"indexExpression": {
															"expression": {
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1050:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1050:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_storage",
															"typeString": "struct MyContract.Ticket storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 90,
														"name": "ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1064:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket memory"
														}
													},
													"src": "1042:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_storage",
														"typeString": "struct MyContract.Ticket storage ref"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1042:28:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "1086:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 133,
														"src": "1081:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1081:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"baseExpression": {
														"id": 95,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 98,
													"indexExpression": {
														"expression": {
															"id": 96,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1102:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1102:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1094:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1081:32:0"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 100,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1123:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"expression": {
																"id": 101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1131:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1131:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1123:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 104,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 105,
															"name": "ticket_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1151:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1145:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1123:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1123:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 110,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1182:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 111,
																"name": "ticket_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1191:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1182:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56616c756520746f6f20736d616c6c",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															},
															"value": "Value too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1174:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1174:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 116,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1276:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 117,
														"name": "ticket_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1284:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1276:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1273:86:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 124,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1334:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1334:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 126,
																	"name": "ticket_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1346:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1334:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 121,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1318:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1310:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 119,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1310:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1310:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "1310:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1310:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 129,
													"nodeType": "ExpressionStatement",
													"src": "1310:49:0"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 63,
												"id": 132,
												"nodeType": "Return",
												"src": "1370:11:0"
											}
										]
									},
									"functionSelector": "d6febde8",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "662:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_numbers",
												"nameLocation": "671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_powerball",
												"nameLocation": "686:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "721:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:6:0"
									},
									"scope": 159,
									"src": "653:735:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1423:51:0",
										"statements": []
									},
									"functionSelector": "676c902f",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drawNumbers",
									"nameLocation": "1403:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1414:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:0:0"
									},
									"scope": 159,
									"src": "1394:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1508:16:0",
										"statements": []
									},
									"functionSelector": "06d5ee54",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givePrizes",
									"nameLocation": "1489:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1499:2:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:0:0"
									},
									"scope": 159,
									"src": "1480:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1552:8:0",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1539:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1543:2:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1552:0:0"
									},
									"scope": 159,
									"src": "1530:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1596:94:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 149,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1609:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1619:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1609:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "IfStatement",
												"src": "1606:45:0",
												"trueBody": {
													"expression": {
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 152,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1637:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "66616c7365",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1646:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "1637:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 155,
													"nodeType": "ExpressionStatement",
													"src": "1637:14:0"
												}
											}
										]
									},
									"functionSelector": "6fd09816",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closeLottery",
									"nameLocation": "1575:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:0"
									},
									"scope": 159,
									"src": "1566:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 160,
							"src": "57:1635:0",
							"usedErrors": []
						}
					],
					"src": "32:1661:0"
				},
				"id": 0
			}
		}
	}
}