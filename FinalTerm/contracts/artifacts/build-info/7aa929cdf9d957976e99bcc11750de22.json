{
	"id": "7aa929cdf9d957976e99bcc11750de22",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\ncontract MyContract{\n\n    //create a structure ticket\n    struct Ticket {\n        uint numbers;\n        uint powerball;\n    }\n\n    mapping(address => uint) balance; //user's NFTs\n    mapping(address => Ticket) tickets; //user's tickets\n    bool active; //true if a round is active, false otherwise\n    uint ticket_price = 1;\n\n    constructor() public payable{\n       active = true;\n       balance[msg.sender] = msg.value;\n    }\n\n    function startNewRound() public{\n        if(active == false)\n            active = true;\n    }\n\n    function buy(uint _numbers, uint _powerball) public payable returns(bool){\n\n        //require(active == true, \"Lottery closed\");\n\n        //check if the numbers are ok\n\n        //create an istance of ticket type\n        //TODO: passare la lista come parametro\n        Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball});\n        tickets[msg.sender] = ticket;\n\n        uint money = balance[msg.sender];\n        balance[msg.sender] = money-ticket_price;\n\n        //require(money >= ticket_price, \"Value too small\");\n\n        if(money < ticket_price)\n            return false;\n\n        //add the ticket into dataset\n\n        /*if(money > ticket_price)\n            payable(msg.sender).transfer(msg.value - ticket_price);*/\n\n        return true;\n    }\n\n    function drawNumbers() public{\n        //include a ethereum random service\n    }\n\n    function givePrizes() public{\n        \n    }\n\n    function mint() public{\n\n    }\n\n    function closeLottery() public{\n        if(active == true)\n            active = false;\n\n        //resetta le strutture\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numbers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_powerball",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "givePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1663  contract MyContract{... */\n  mstore(0x40, 0x80)\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":379:380  1 */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":359:380  uint ticket_price = 1 */\n  0x03\n  sstore\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":433:437  true */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":424:430  active */\n  0x02\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":424:437  active = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":468:477  msg.value */\n  callvalue\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":446:453  balance */\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":446:465  balance[msg.sender] */\n  dup1\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":454:464  msg.sender */\n  caller\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":446:465  balance[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":446:477  balance[msg.sender] = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1663  contract MyContract{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":57:1663  contract MyContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06d5ee54\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x676c902f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6fd09816\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd85948c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6febde8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1451:1495  function givePrizes() public{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1501:1531  function mint() public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1365:1445  function drawNumbers() public{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1537:1661  function closeLottery() public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":490:583  function startNewRound() public{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":589:1359  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1451:1495  function givePrizes() public{... */\n    tag_10:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1501:1531  function mint() public{... */\n    tag_13:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1365:1445  function drawNumbers() public{... */\n    tag_16:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1537:1661  function closeLottery() public{... */\n    tag_19:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1590:1594  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1580:1594  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1580:1586  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1580:1594  active == true */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1577:1622  if(active == true)... */\n      tag_33\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1617:1622  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1608:1614  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1608:1622  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1577:1622  if(active == true)... */\n    tag_33:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1537:1661  function closeLottery() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":490:583  function startNewRound() public{... */\n    tag_22:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":544:549  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":534:549  active == false */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":534:540  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":534:549  active == false */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":531:576  if(active == false)... */\n      tag_35\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":572:576  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":563:569  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":563:576  active = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":531:576  if(active == false)... */\n    tag_35:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":490:583  function startNewRound() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":589:1359  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_26:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":657:661  bool */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":857:877  Ticket memory ticket */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":880:932  Ticket({numbers : _numbers, powerball : _powerball}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":898:906  _numbers */\n      dup6\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":880:932  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":920:930  _powerball */\n      dup5\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":880:932  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":857:932  Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball}) */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":964:970  ticket */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":942:949  tickets */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":942:961  tickets[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":950:960  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":942:961  tickets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":942:970  tickets[msg.sender] = ticket */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":981:991  uint money */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":994:1001  balance */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":994:1013  balance[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1002:1012  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":994:1013  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":981:1013  uint money = balance[msg.sender] */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1051:1063  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1045:1050  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1045:1063  money-ticket_price */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1023:1030  balance */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1023:1042  balance[msg.sender] */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1031:1041  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1023:1042  balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1023:1063  balance[msg.sender] = money-ticket_price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1147:1159  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1139:1144  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1139:1159  money < ticket_price */\n      lt\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1136:1185  if(money < ticket_price)... */\n      iszero\n      tag_39\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1180:1185  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1173:1185  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_36)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1136:1185  if(money < ticket_price)... */\n    tag_39:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1348:1352  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1341:1352  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":589:1359  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_36:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_41:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_43:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_44:\n        /* \"#utility.yul\":490:514   */\n      tag_55\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_43\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_56:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_45:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_58\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_44\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_25:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_61\n      tag_41\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":783:902   */\n    tag_60:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_62\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_45\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_63\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1260   */\n    tag_46:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1247:1252   */\n      dup2\n        /* \"#utility.yul\":1240:1253   */\n      iszero\n        /* \"#utility.yul\":1233:1254   */\n      iszero\n        /* \"#utility.yul\":1222:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1266:1375   */\n    tag_47:\n        /* \"#utility.yul\":1347:1368   */\n      tag_66\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1347:1368   */\n      tag_46\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1369   */\n      mstore\n        /* \"#utility.yul\":1266:1375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1591   */\n    tag_28:\n        /* \"#utility.yul\":1468:1472   */\n      0x00\n        /* \"#utility.yul\":1506:1508   */\n      0x20\n        /* \"#utility.yul\":1495:1504   */\n      dup3\n        /* \"#utility.yul\":1491:1509   */\n      add\n        /* \"#utility.yul\":1483:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1584   */\n      tag_68\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1566:1583   */\n      add\n        /* \"#utility.yul\":1557:1563   */\n      dup5\n        /* \"#utility.yul\":1519:1584   */\n      tag_47\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1381:1591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1597:1777   */\n    tag_48:\n        /* \"#utility.yul\":1645:1722   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1642:1643   */\n      0x00\n        /* \"#utility.yul\":1635:1723   */\n      mstore\n        /* \"#utility.yul\":1742:1746   */\n      0x11\n        /* \"#utility.yul\":1739:1740   */\n      0x04\n        /* \"#utility.yul\":1732:1747   */\n      mstore\n        /* \"#utility.yul\":1766:1770   */\n      0x24\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1756:1771   */\n      revert\n        /* \"#utility.yul\":1783:1974   */\n    tag_38:\n        /* \"#utility.yul\":1823:1827   */\n      0x00\n        /* \"#utility.yul\":1843:1863   */\n      tag_71\n        /* \"#utility.yul\":1861:1862   */\n      dup3\n        /* \"#utility.yul\":1843:1863   */\n      tag_43\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1838:1863   */\n      swap2\n      pop\n        /* \"#utility.yul\":1877:1897   */\n      tag_72\n        /* \"#utility.yul\":1895:1896   */\n      dup4\n        /* \"#utility.yul\":1877:1897   */\n      tag_43\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1872:1897   */\n      swap3\n      pop\n        /* \"#utility.yul\":1916:1917   */\n      dup3\n        /* \"#utility.yul\":1913:1914   */\n      dup3\n        /* \"#utility.yul\":1910:1918   */\n      lt\n        /* \"#utility.yul\":1907:1941   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1921:1939   */\n      tag_74\n      tag_48\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1907:1941   */\n    tag_73:\n        /* \"#utility.yul\":1966:1967   */\n      dup3\n        /* \"#utility.yul\":1963:1964   */\n      dup3\n        /* \"#utility.yul\":1959:1968   */\n      sub\n        /* \"#utility.yul\":1951:1968   */\n      swap1\n      pop\n        /* \"#utility.yul\":1783:1974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220067b43c47a4a75809bb8d0629ecb5ee2d91230824ba698e01fa795c217e3407e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260016003556001600260006101000a81548160ff021916908315150217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e5806100766000396000f3fe6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e291906102d6565b610175565b6040516100f49190610331565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b600080604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060035481610237919061037b565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060035481101561028e57600092505050610295565b6001925050505b92915050565b600080fd5b6000819050919050565b6102b3816102a0565b81146102be57600080fd5b50565b6000813590506102d0816102aa565b92915050565b600080604083850312156102ed576102ec61029b565b5b60006102fb858286016102c1565b925050602061030c858286016102c1565b9150509250929050565b60008115159050919050565b61032b81610316565b82525050565b60006020820190506103466000830184610322565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610386826102a0565b9150610391836102a0565b9250828210156103a4576103a361034c565b5b82820390509291505056fea2646970667358221220067b43c47a4a75809bb8d0629ecb5ee2d91230824ba698e01fa795c217e3407e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3E5 DUP1 PUSH2 0x76 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x295 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x2A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D0 DUP2 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2EC PUSH2 0x29B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FB DUP6 DUP3 DUP7 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30C DUP6 DUP3 DUP7 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32B DUP2 PUSH2 0x316 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x346 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x322 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x386 DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x391 DUP4 PUSH2 0x2A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3A4 JUMPI PUSH2 0x3A3 PUSH2 0x34C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH28 0x43C47A4A75809BB8D0629ECB5EE2D91230824BA698E01FA795C217E3 BLOCKHASH PUSH31 0x64736F6C634300080D00330000000000000000000000000000000000000000 ",
							"sourceMap": "57:1606:0:-:0;;;379:1;359:21;;433:4;424:6;;:13;;;;;;;;;;;;;;;;;;468:9;446:7;:19;454:10;446:19;;;;;;;;;;;;;;;:31;;;;57:1606;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_97": {
									"entryPoint": 373,
									"id": 97,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@closeLottery_121": {
									"entryPoint": 259,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drawNumbers_101": {
									"entryPoint": 257,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givePrizes_105": {
									"entryPoint": 253,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_109": {
									"entryPoint": 255,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startNewRound_48": {
									"entryPoint": 316,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1977:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1247:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1240:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1204:7:1",
														"type": ""
													}
												],
												"src": "1170:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1362:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:1",
														"type": ""
													}
												],
												"src": "1266:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1557:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1581:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1566:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1519:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1457:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1468:4:1",
														"type": ""
													}
												],
												"src": "1381:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1625:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1739:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1732:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1763:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1756:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1597:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1828:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1838:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1861:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1843:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1838:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1872:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1895:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1877:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1872:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1919:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1921:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1921:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1921:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1913:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1916:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1910:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1910:8:1"
															},
															"nodeType": "YulIf",
															"src": "1907:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1951:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1963:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1966:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1951:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1814:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1817:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1823:4:1",
														"type": ""
													}
												],
												"src": "1783:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e291906102d6565b610175565b6040516100f49190610331565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b600080604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060035481610237919061037b565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060035481101561028e57600092505050610295565b6001925050505b92915050565b600080fd5b6000819050919050565b6102b3816102a0565b81146102be57600080fd5b50565b6000813590506102d0816102aa565b92915050565b600080604083850312156102ed576102ec61029b565b5b60006102fb858286016102c1565b925050602061030c858286016102c1565b9150509250929050565b60008115159050919050565b61032b81610316565b82525050565b60006020820190506103466000830184610322565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610386826102a0565b9150610391836102a0565b9250828210156103a4576103a361034c565b5b82820390509291505056fea2646970667358221220067b43c47a4a75809bb8d0629ecb5ee2d91230824ba698e01fa795c217e3407e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x295 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x2A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D0 DUP2 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2EC PUSH2 0x29B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FB DUP6 DUP3 DUP7 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30C DUP6 DUP3 DUP7 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32B DUP2 PUSH2 0x316 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x346 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x322 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x386 DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x391 DUP4 PUSH2 0x2A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3A4 JUMPI PUSH2 0x3A3 PUSH2 0x34C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH28 0x43C47A4A75809BB8D0629ECB5EE2D91230824BA698E01FA795C217E3 BLOCKHASH PUSH31 0x64736F6C634300080D00330000000000000000000000000000000000000000 ",
							"sourceMap": "57:1606:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1451:44;;;;;;;;;;;;;:::i;:::-;;1501:30;;;;;;;;;;;;;:::i;:::-;;1365:80;;;;;;;;;;;;;:::i;:::-;;1537:124;;;;;;;;;;;;;:::i;:::-;;490:93;;;;;;;;;;;;;:::i;:::-;;589:770;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1451:44;:::o;1501:30::-;:::o;1365:80::-;:::o;1537:124::-;1590:4;1580:14;;:6;;;;;;;;;;;:14;;;1577:45;;1617:5;1608:6;;:14;;;;;;;;;;;;;;;;;;1577:45;1537:124::o;490:93::-;544:5;534:15;;:6;;;;;;;;;;;:15;;;531:45;;572:4;563:6;;:13;;;;;;;;;;;;;;;;;;531:45;490:93::o;589:770::-;657:4;857:20;880:52;;;;;;;;898:8;880:52;;;;920:10;880:52;;;857:75;;964:6;942:7;:19;950:10;942:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;981:10;994:7;:19;1002:10;994:19;;;;;;;;;;;;;;;;981:32;;1051:12;;1045:5;:18;;;;:::i;:::-;1023:7;:19;1031:10;1023:19;;;;;;;;;;;;;;;:40;;;;1147:12;;1139:5;:20;1136:49;;;1180:5;1173:12;;;;;;1136:49;1348:4;1341:11;;;;589:770;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:109::-;1347:21;1362:5;1347:21;:::i;:::-;1342:3;1335:34;1266:109;;:::o;1381:210::-;1468:4;1506:2;1495:9;1491:18;1483:26;;1519:65;1581:1;1570:9;1566:17;1557:6;1519:65;:::i;:::-;1381:210;;;;:::o;1597:180::-;1645:77;1642:1;1635:88;1742:4;1739:1;1732:15;1766:4;1763:1;1756:15;1783:191;1823:4;1843:20;1861:1;1843:20;:::i;:::-;1838:25;;1877:20;1895:1;1877:20;:::i;:::-;1872:25;;1916:1;1913;1910:8;1907:34;;;1921:18;;:::i;:::-;1907:34;1966:1;1963;1959:9;1951:17;;1783:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199400",
								"executionCost": "68796",
								"totalCost": "268196"
							},
							"external": {
								"buy(uint256,uint256)": "infinite",
								"closeLottery()": "26626",
								"drawNumbers()": "166",
								"givePrizes()": "122",
								"mint()": "144",
								"startNewRound()": "26648"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1663,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 379,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 359,
									"end": 380,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 433,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 430,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 424,
									"end": 430,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 424,
									"end": 437,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 424,
									"end": 437,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 468,
									"end": 477,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 446,
									"end": 453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 454,
									"end": 464,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 446,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 446,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 446,
									"end": 465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 446,
									"end": 465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 446,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 465,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 446,
									"end": 477,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 446,
									"end": 477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 446,
									"end": 477,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 446,
									"end": 477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220067b43c47a4a75809bb8d0629ecb5ee2d91230824ba698e01fa795c217e3407e64736f6c634300080d0033",
									".code": [
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "6D5EE54"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "676C902F"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "6FD09816"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "BD85948C"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "D6FEBDE8"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1577,
											"end": 1622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1622,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1577,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1661,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 534,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 534,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 534,
											"end": 540,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 534,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 534,
											"end": 540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 534,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 534,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 534,
											"end": 549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 531,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 531,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 572,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 563,
											"end": 576,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 563,
											"end": 576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 531,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 583,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 930,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 960,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1051,
											"end": 1063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1041,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1159,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1136,
											"end": 1185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1136,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 1359,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1777,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1597,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1918,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1907,
											"end": 1941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1907,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256,uint256)": "d6febde8",
							"closeLottery()": "6fd09816",
							"drawNumbers()": "676c902f",
							"givePrizes()": "06d5ee54",
							"mint()": "1249c58b",
							"startNewRound()": "bd85948c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numbers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_powerball\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"givePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":{\"keccak256\":\"0x4f2d79f11e13bb859b35a36b1724bd41079f06cb8977cc71ba39268e99882491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://786bc3e460540d1001e896a9803d5a9ef2200c2b41fa0fb92d665e2356d8b30b\",\"dweb:/ipfs/Qmdtup7JzYbmLFTTpLc2BgJXFZzE5PgXMoKBtccZ4dZvmb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "balance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 15,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "tickets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Ticket)6_storage)"
							},
							{
								"astId": 17,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "active",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 20,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "ticket_price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Ticket)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MyContract.Ticket)",
								"numberOfBytes": "32",
								"value": "t_struct(Ticket)6_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Ticket)6_storage": {
								"encoding": "inplace",
								"label": "struct MyContract.Ticket",
								"members": [
									{
										"astId": 3,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "numbers",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "powerball",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:17:5:\n   |\n17 |     constructor() public payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 484,
					"file": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"start": 387
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							122
						]
					},
					"id": 123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "MyContract",
							"nameLocation": "66:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.Ticket",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "144:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "139:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "powerball",
											"nameLocation": "166:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "161:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "161:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "122:6:0",
									"nodeType": "StructDefinition",
									"scope": 122,
									"src": "115:67:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "213:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "188:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "196:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "188:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 8,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "207:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "tickets",
									"nameLocation": "267:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "240:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
										"typeString": "mapping(address => struct MyContract.Ticket)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "248:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "240:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
											"typeString": "mapping(address => struct MyContract.Ticket)"
										},
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "Ticket",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "259:6:0"
											},
											"referencedDeclaration": 6,
											"src": "259:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
												"typeString": "struct MyContract.Ticket"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "active",
									"nameLocation": "302:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "297:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "297:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "ticket_price",
									"nameLocation": "364:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "359:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "359:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "379:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "415:69:0",
										"statements": [
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "424:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "433:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "424:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "424:13:0"
											},
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 27,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 30,
														"indexExpression": {
															"expression": {
																"id": 28,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "454:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "454:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "446:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "468:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "468:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "446:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "446:31:0"
											}
										]
									},
									"id": 36,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:0:0"
									},
									"scope": 122,
									"src": "387:97:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "521:62:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 39,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "544:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "534:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "531:45:0",
												"trueBody": {
													"expression": {
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 42,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "563:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 45,
													"nodeType": "ExpressionStatement",
													"src": "563:13:0"
												}
											}
										]
									},
									"functionSelector": "bd85948c",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "499:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:0:0"
									},
									"scope": 122,
									"src": "490:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "662:697:0",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "871:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "857:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket"
														},
														"typeName": {
															"id": 58,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 57,
																"name": "Ticket",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "857:6:0"
															},
															"referencedDeclaration": 6,
															"src": "857:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
																"typeString": "struct MyContract.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"arguments": [
														{
															"id": 61,
															"name": "_numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 62,
															"name": "_powerball",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "920:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 60,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "880:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$6_storage_ptr_$",
															"typeString": "type(struct MyContract.Ticket storage pointer)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"numbers",
														"powerball"
													],
													"nodeType": "FunctionCall",
													"src": "880:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
														"typeString": "struct MyContract.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "857:75:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "942:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
																"typeString": "mapping(address => struct MyContract.Ticket storage ref)"
															}
														},
														"id": 68,
														"indexExpression": {
															"expression": {
																"id": 66,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "950:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "950:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "942:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_storage",
															"typeString": "struct MyContract.Ticket storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "964:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket memory"
														}
													},
													"src": "942:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_storage",
														"typeString": "struct MyContract.Ticket storage ref"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "942:28:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "986:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "981:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 72,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"baseExpression": {
														"id": 74,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 77,
													"indexExpression": {
														"expression": {
															"id": 75,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1002:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1002:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "994:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "981:32:0"
											},
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 79,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 82,
														"indexExpression": {
															"expression": {
																"id": 80,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1031:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1031:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1023:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 83,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1045:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 84,
															"name": "ticket_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1051:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1045:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1023:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1023:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 88,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1139:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 89,
														"name": "ticket_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1147:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1139:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "IfStatement",
												"src": "1136:49:0",
												"trueBody": {
													"expression": {
														"hexValue": "66616c7365",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1180:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 56,
													"id": 92,
													"nodeType": "Return",
													"src": "1173:12:0"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 56,
												"id": 95,
												"nodeType": "Return",
												"src": "1341:11:0"
											}
										]
									},
									"functionSelector": "d6febde8",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_numbers",
												"nameLocation": "607:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "602:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "602:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_powerball",
												"nameLocation": "622:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:32:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "657:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "657:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:6:0"
									},
									"scope": 122,
									"src": "589:770:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1394:51:0",
										"statements": []
									},
									"functionSelector": "676c902f",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drawNumbers",
									"nameLocation": "1374:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:0:0"
									},
									"scope": 122,
									"src": "1365:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1479:16:0",
										"statements": []
									},
									"functionSelector": "06d5ee54",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givePrizes",
									"nameLocation": "1460:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1479:0:0"
									},
									"scope": 122,
									"src": "1451:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1523:8:0",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1510:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:0"
									},
									"scope": 122,
									"src": "1501:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1567:94:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 112,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1580:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1590:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1580:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 119,
												"nodeType": "IfStatement",
												"src": "1577:45:0",
												"trueBody": {
													"expression": {
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 115,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "66616c7365",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1617:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "1608:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 118,
													"nodeType": "ExpressionStatement",
													"src": "1608:14:0"
												}
											}
										]
									},
									"functionSelector": "6fd09816",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closeLottery",
									"nameLocation": "1546:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1558:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:0"
									},
									"scope": 122,
									"src": "1537:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 123,
							"src": "57:1606:0",
							"usedErrors": []
						}
					],
					"src": "32:1632:0"
				},
				"id": 0
			}
		}
	}
}