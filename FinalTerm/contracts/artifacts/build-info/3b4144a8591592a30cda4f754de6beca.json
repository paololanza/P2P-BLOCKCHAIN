{
	"id": "3b4144a8591592a30cda4f754de6beca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\n\n\n// Contract example used in the slides\ncontract MyContract{\n\n    //create a structure ticket\n    struct Ticket {\n        uint numbers;\n        uint powerball;\n    }\n\n    mapping(address => uint[]) NFTList; //user's NFTs\n    mapping(address => Ticket) tickets; //user's tickets\n    bool active; //true if a round is active, false otherwise\n    uint ticket_price = 10;\n\n    constructor() {\n       active = true;\n    }\n\n    function startNewRound() public{\n        if(active == false)\n            active = true;\n    }\n\n    function buy(uint _numbers, uint _powerball) public payable returns(bool){\n\n        require(active == true, \"Lottery closed\");\n\n        //check if the numbers are ok\n\n        //create an istance of ticket type\n        //TODO: passare la lista come parametro\n        Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball});\n        tickets[msg.sender] = ticket;\n\n        uint money = msg.value;\n\n        require(money >= ticket_price, \"Value too small\");\n\n        //add the ticket into dataset\n\n        if(money > ticket_price)\n            payable(msg.sender).transfer(msg.value - ticket_price);\n\n        return true;\n    }\n\n    function drawNumbers() public{\n        //include a ethereum random service\n    }\n\n    function givePrizes() public{\n        \n    }\n\n    function mint() public{\n\n    }\n\n    function closeLottery() public{\n        if(active == true)\n            active = false;\n\n        //resetta le strutture\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numbers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_powerball",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "givePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":98:1525  contract MyContract{... */\n  mstore(0x40, 0x80)\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":422:424  10 */\n  0x0a\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":402:424  uint ticket_price = 10 */\n  0x03\n  sstore\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":431:474  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":463:467  true */\n  0x01\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":454:460  active */\n  0x02\n  0x00\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":454:467  active = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":98:1525  contract MyContract{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":98:1525  contract MyContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06d5ee54\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x676c902f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6fd09816\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbd85948c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6febde8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1313:1357  function givePrizes() public{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1363:1393  function mint() public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1227:1307  function drawNumbers() public{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1399:1523  function closeLottery() public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":480:573  function startNewRound() public{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":579:1221  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1313:1357  function givePrizes() public{... */\n    tag_10:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1363:1393  function mint() public{... */\n    tag_13:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1227:1307  function drawNumbers() public{... */\n    tag_16:\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1399:1523  function closeLottery() public{... */\n    tag_19:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1452:1456  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1442:1456  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1442:1448  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1442:1456  active == true */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1439:1484  if(active == true)... */\n      tag_33\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1479:1484  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1470:1476  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1470:1484  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1439:1484  if(active == true)... */\n    tag_33:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1399:1523  function closeLottery() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":480:573  function startNewRound() public{... */\n    tag_22:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":534:539  false */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":524:539  active == false */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":524:530  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":524:539  active == false */\n      iszero\n      iszero\n      sub\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":521:566  if(active == false)... */\n      tag_35\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":562:566  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":553:559  active */\n      0x02\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":553:566  active = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":521:566  if(active == false)... */\n    tag_35:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":480:573  function startNewRound() public{... */\n      jump\t// out\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":579:1221  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n    tag_26:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":647:651  bool */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":681:685  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":671:685  active == true */\n      iszero\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":671:677  active */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":671:685  active == true */\n      iszero\n      iszero\n      eq\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":663:704  require(active == true, \"Lottery closed\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":845:865  Ticket memory ticket */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":868:920  Ticket({numbers : _numbers, powerball : _powerball}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":886:894  _numbers */\n      dup6\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":868:920  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":908:918  _powerball */\n      dup5\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":868:920  Ticket({numbers : _numbers, powerball : _powerball}) */\n      dup2\n      mstore\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":845:920  Ticket memory ticket = Ticket({numbers : _numbers, powerball : _powerball}) */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":952:958  ticket */\n      dup1\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":930:937  tickets */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":930:949  tickets[msg.sender] */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":938:948  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":930:949  tickets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":930:958  tickets[msg.sender] = ticket */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":969:979  uint money */\n      0x00\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":982:991  msg.value */\n      callvalue\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":969:991  uint money = msg.value */\n      swap1\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1019:1031  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1010:1015  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1010:1031  money >= ticket_price */\n      lt\n      iszero\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1002:1051  require(money >= ticket_price, \"Value too small\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1112:1124  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1104:1109  money */\n      dup2\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1104:1124  money > ticket_price */\n      gt\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1101:1192  if(money > ticket_price)... */\n      iszero\n      tag_43\n      jumpi\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1146:1156  msg.sender */\n      caller\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1138:1166  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1138:1192  payable(msg.sender).transfer(msg.value - ticket_price) */\n      0x08fc\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1179:1191  ticket_price */\n      sload(0x03)\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1167:1176  msg.value */\n      callvalue\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1167:1191  msg.value - ticket_price */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1138:1192  payable(msg.sender).transfer(msg.value - ticket_price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1101:1192  if(money > ticket_price)... */\n    tag_43:\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1210:1214  true */\n      0x01\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":1203:1214  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":579:1221  function buy(uint _numbers, uint _powerball) public payable returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_49:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_51:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_52:\n        /* \"#utility.yul\":490:514   */\n      tag_68\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_51\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_69:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_53:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_71\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_52\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_25:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_74\n      tag_49\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":783:902   */\n    tag_73:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_75\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_53\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_76\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_53\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1260   */\n    tag_54:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1247:1252   */\n      dup2\n        /* \"#utility.yul\":1240:1253   */\n      iszero\n        /* \"#utility.yul\":1233:1254   */\n      iszero\n        /* \"#utility.yul\":1222:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1266:1375   */\n    tag_55:\n        /* \"#utility.yul\":1347:1368   */\n      tag_79\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1347:1368   */\n      tag_54\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1369   */\n      mstore\n        /* \"#utility.yul\":1266:1375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1591   */\n    tag_28:\n        /* \"#utility.yul\":1468:1472   */\n      0x00\n        /* \"#utility.yul\":1506:1508   */\n      0x20\n        /* \"#utility.yul\":1495:1504   */\n      dup3\n        /* \"#utility.yul\":1491:1509   */\n      add\n        /* \"#utility.yul\":1483:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1584   */\n      tag_81\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1566:1583   */\n      add\n        /* \"#utility.yul\":1557:1563   */\n      dup5\n        /* \"#utility.yul\":1519:1584   */\n      tag_55\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1381:1591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1597:1766   */\n    tag_56:\n        /* \"#utility.yul\":1681:1692   */\n      0x00\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1710:1713   */\n      dup3\n        /* \"#utility.yul\":1703:1722   */\n      mstore\n        /* \"#utility.yul\":1755:1759   */\n      0x20\n        /* \"#utility.yul\":1750:1753   */\n      dup3\n        /* \"#utility.yul\":1746:1760   */\n      add\n        /* \"#utility.yul\":1731:1760   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1936   */\n    tag_57:\n        /* \"#utility.yul\":1912:1928   */\n      0x4c6f747465727920636c6f736564000000000000000000000000000000000000\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1900:1906   */\n      dup3\n        /* \"#utility.yul\":1896:1910   */\n      add\n        /* \"#utility.yul\":1889:1929   */\n      mstore\n        /* \"#utility.yul\":1772:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2308   */\n    tag_58:\n        /* \"#utility.yul\":2084:2087   */\n      0x00\n        /* \"#utility.yul\":2105:2172   */\n      tag_85\n        /* \"#utility.yul\":2169:2171   */\n      0x0e\n        /* \"#utility.yul\":2164:2167   */\n      dup4\n        /* \"#utility.yul\":2105:2172   */\n      tag_56\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2098:2172   */\n      swap2\n      pop\n        /* \"#utility.yul\":2181:2274   */\n      tag_86\n        /* \"#utility.yul\":2270:2273   */\n      dup3\n        /* \"#utility.yul\":2181:2274   */\n      tag_57\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2299:2301   */\n      0x20\n        /* \"#utility.yul\":2294:2297   */\n      dup3\n        /* \"#utility.yul\":2290:2302   */\n      add\n        /* \"#utility.yul\":2283:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":1942:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2733   */\n    tag_39:\n        /* \"#utility.yul\":2480:2484   */\n      0x00\n        /* \"#utility.yul\":2518:2520   */\n      0x20\n        /* \"#utility.yul\":2507:2516   */\n      dup3\n        /* \"#utility.yul\":2503:2521   */\n      add\n        /* \"#utility.yul\":2495:2521   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2576   */\n      dup2\n        /* \"#utility.yul\":2561:2565   */\n      dup2\n        /* \"#utility.yul\":2557:2577   */\n      sub\n        /* \"#utility.yul\":2553:2554   */\n      0x00\n        /* \"#utility.yul\":2542:2551   */\n      dup4\n        /* \"#utility.yul\":2538:2555   */\n      add\n        /* \"#utility.yul\":2531:2578   */\n      mstore\n        /* \"#utility.yul\":2595:2726   */\n      tag_88\n        /* \"#utility.yul\":2721:2725   */\n      dup2\n        /* \"#utility.yul\":2595:2726   */\n      tag_58\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2587:2726   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2739:2904   */\n    tag_59:\n        /* \"#utility.yul\":2879:2896   */\n      0x56616c756520746f6f20736d616c6c0000000000000000000000000000000000\n        /* \"#utility.yul\":2875:2876   */\n      0x00\n        /* \"#utility.yul\":2867:2873   */\n      dup3\n        /* \"#utility.yul\":2863:2877   */\n      add\n        /* \"#utility.yul\":2856:2897   */\n      mstore\n        /* \"#utility.yul\":2739:2904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:3276   */\n    tag_60:\n        /* \"#utility.yul\":3052:3055   */\n      0x00\n        /* \"#utility.yul\":3073:3140   */\n      tag_91\n        /* \"#utility.yul\":3137:3139   */\n      0x0f\n        /* \"#utility.yul\":3132:3135   */\n      dup4\n        /* \"#utility.yul\":3073:3140   */\n      tag_56\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3066:3140   */\n      swap2\n      pop\n        /* \"#utility.yul\":3149:3242   */\n      tag_92\n        /* \"#utility.yul\":3238:3241   */\n      dup3\n        /* \"#utility.yul\":3149:3242   */\n      tag_59\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3262:3265   */\n      dup3\n        /* \"#utility.yul\":3258:3270   */\n      add\n        /* \"#utility.yul\":3251:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2910:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3701   */\n    tag_42:\n        /* \"#utility.yul\":3448:3452   */\n      0x00\n        /* \"#utility.yul\":3486:3488   */\n      0x20\n        /* \"#utility.yul\":3475:3484   */\n      dup3\n        /* \"#utility.yul\":3471:3489   */\n      add\n        /* \"#utility.yul\":3463:3489   */\n      swap1\n      pop\n        /* \"#utility.yul\":3535:3544   */\n      dup2\n        /* \"#utility.yul\":3529:3533   */\n      dup2\n        /* \"#utility.yul\":3525:3545   */\n      sub\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3510:3519   */\n      dup4\n        /* \"#utility.yul\":3506:3523   */\n      add\n        /* \"#utility.yul\":3499:3546   */\n      mstore\n        /* \"#utility.yul\":3563:3694   */\n      tag_94\n        /* \"#utility.yul\":3689:3693   */\n      dup2\n        /* \"#utility.yul\":3563:3694   */\n      tag_60\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3555:3694   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3707:3887   */\n    tag_61:\n        /* \"#utility.yul\":3755:3832   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3745:3833   */\n      mstore\n        /* \"#utility.yul\":3852:3856   */\n      0x11\n        /* \"#utility.yul\":3849:3850   */\n      0x04\n        /* \"#utility.yul\":3842:3857   */\n      mstore\n        /* \"#utility.yul\":3876:3880   */\n      0x24\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3866:3881   */\n      revert\n        /* \"#utility.yul\":3893:4084   */\n    tag_45:\n        /* \"#utility.yul\":3933:3937   */\n      0x00\n        /* \"#utility.yul\":3953:3973   */\n      tag_97\n        /* \"#utility.yul\":3971:3972   */\n      dup3\n        /* \"#utility.yul\":3953:3973   */\n      tag_51\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3948:3973   */\n      swap2\n      pop\n        /* \"#utility.yul\":3987:4007   */\n      tag_98\n        /* \"#utility.yul\":4005:4006   */\n      dup4\n        /* \"#utility.yul\":3987:4007   */\n      tag_51\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3982:4007   */\n      swap3\n      pop\n        /* \"#utility.yul\":4026:4027   */\n      dup3\n        /* \"#utility.yul\":4023:4024   */\n      dup3\n        /* \"#utility.yul\":4020:4028   */\n      lt\n        /* \"#utility.yul\":4017:4051   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":4031:4049   */\n      tag_100\n      tag_61\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4017:4051   */\n    tag_99:\n        /* \"#utility.yul\":4076:4077   */\n      dup3\n        /* \"#utility.yul\":4073:4074   */\n      dup3\n        /* \"#utility.yul\":4069:4078   */\n      sub\n        /* \"#utility.yul\":4061:4078   */\n      swap1\n      pop\n        /* \"#utility.yul\":3893:4084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206c8db3472d26f49c04bd7487841331d1f3b1f1a00233fde44363d6e6da8ed63064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600a60035534801561001557600080fd5b506001600260006101000a81548160ff021916908315150217905550610525806100406000396000f3fe6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e2919061032d565b610175565b6040516100f49190610388565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b600060011515600260009054906101000a900460ff161515146101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610400565b60405180910390fd5b6000604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050506000349050600354811015610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e9061046c565b60405180910390fd5b6003548111156102e6573373ffffffffffffffffffffffffffffffffffffffff166108fc600354346102b991906104bb565b9081150290604051600060405180830381858888f193505050501580156102e4573d6000803e3d6000fd5b505b60019250505092915050565b600080fd5b6000819050919050565b61030a816102f7565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b60008060408385031215610344576103436102f2565b5b600061035285828601610318565b925050602061036385828601610318565b9150509250929050565b60008115159050919050565b6103828161036d565b82525050565b600060208201905061039d6000830184610379565b92915050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b60006103ea600e836103a3565b91506103f5826103b4565b602082019050919050565b60006020820190508181036000830152610419816103dd565b9050919050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b6000610456600f836103a3565b915061046182610420565b602082019050919050565b6000602082019050818103600083015261048581610449565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104c6826102f7565b91506104d1836102f7565b9250828210156104e4576104e361048c565b5b82820390509291505056fea26469706673582212206c8db3472d26f49c04bd7487841331d1f3b1f1a00233fde44363d6e6da8ed63064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x525 DUP1 PUSH2 0x40 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x2E6 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x327 DUP2 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x344 JUMPI PUSH2 0x343 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP6 DUP3 DUP7 ADD PUSH2 0x318 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x363 DUP6 DUP3 DUP7 ADD PUSH2 0x318 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x36D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA PUSH1 0xE DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5 DUP3 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x419 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH1 0xF DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x461 DUP3 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485 DUP2 PUSH2 0x449 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D1 DUP4 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x8DB3472D26F49C04BD74878413 BALANCE 0xD1 RETURN 0xB1 CALL LOG0 MUL CALLER REVERT 0xE4 NUMBER PUSH4 0xD6E6DA8E 0xD6 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "98:1427:0:-:0;;;422:2;402:22;;431:43;;;;;;;;;;463:4;454:6;;:13;;;;;;;;;;;;;;;;;;98:1427;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_103": {
									"entryPoint": 373,
									"id": 103,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@closeLottery_127": {
									"entryPoint": 259,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drawNumbers_107": {
									"entryPoint": 257,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givePrizes_111": {
									"entryPoint": 253,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_115": {
									"entryPoint": 255,
									"id": 115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startNewRound_41": {
									"entryPoint": 316,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4087:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1247:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1240:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1204:7:1",
														"type": ""
													}
												],
												"src": "1170:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1362:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:1",
														"type": ""
													}
												],
												"src": "1266:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1557:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1581:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1566:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1519:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1457:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1468:4:1",
														"type": ""
													}
												],
												"src": "1381:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1693:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1710:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1703:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1731:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1731:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1665:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1670:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1681:11:1",
														"type": ""
													}
												],
												"src": "1597:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:14:1"
																	},
																	{
																		"hexValue": "4c6f747465727920636c6f736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:16:1",
																		"type": "",
																		"value": "Lottery closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1870:6:1",
														"type": ""
													}
												],
												"src": "1772:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2105:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																	"nodeType": "YulIdentifier",
																	"src": "2181:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2283:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2084:3:1",
														"type": ""
													}
												],
												"src": "1942:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2553:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2561:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2567:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2557:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2587:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2721:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2595:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2587:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2465:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2480:4:1",
														"type": ""
													}
												],
												"src": "2314:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2845:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2875:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:14:1"
																	},
																	{
																		"hexValue": "56616c756520746f6f20736d616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2879:17:1",
																		"type": "",
																		"value": "Value too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2856:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2837:6:1",
														"type": ""
													}
												],
												"src": "2739:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3056:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3066:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3132:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3073:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3238:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																	"nodeType": "YulIdentifier",
																	"src": "3149:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3251:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3262:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3044:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3052:3:1",
														"type": ""
													}
												],
												"src": "2910:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3463:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3475:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3463:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3521:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3506:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3529:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3535:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3499:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3555:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3689:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3563:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3433:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3448:4:1",
														"type": ""
													}
												],
												"src": "3282:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3735:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3755:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3745:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3745:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3849:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3852:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3873:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3876:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3707:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3938:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3948:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3971:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3953:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3948:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3982:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4005:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3987:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3982:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4029:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4031:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4031:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4023:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4026:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4020:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:8:1"
															},
															"nodeType": "YulIf",
															"src": "4017:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4061:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4073:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4076:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4061:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3924:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3927:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3933:4:1",
														"type": ""
													}
												],
												"src": "3893:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lottery closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806306d5ee541461005a5780631249c58b14610071578063676c902f146100885780636fd098161461009f578063bd85948c146100b6578063d6febde8146100cd575b600080fd5b34801561006657600080fd5b5061006f6100fd565b005b34801561007d57600080fd5b506100866100ff565b005b34801561009457600080fd5b5061009d610101565b005b3480156100ab57600080fd5b506100b4610103565b005b3480156100c257600080fd5b506100cb61013c565b005b6100e760048036038101906100e2919061032d565b610175565b6040516100f49190610388565b60405180910390f35b565b565b565b60011515600260009054906101000a900460ff1615150361013a576000600260006101000a81548160ff0219169083151502179055505b565b60001515600260009054906101000a900460ff16151503610173576001600260006101000a81548160ff0219169083151502179055505b565b600060011515600260009054906101000a900460ff161515146101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610400565b60405180910390fd5b6000604051806040016040528085815260200184815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050506000349050600354811015610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e9061046c565b60405180910390fd5b6003548111156102e6573373ffffffffffffffffffffffffffffffffffffffff166108fc600354346102b991906104bb565b9081150290604051600060405180830381858888f193505050501580156102e4573d6000803e3d6000fd5b505b60019250505092915050565b600080fd5b6000819050919050565b61030a816102f7565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b60008060408385031215610344576103436102f2565b5b600061035285828601610318565b925050602061036385828601610318565b9150509250929050565b60008115159050919050565b6103828161036d565b82525050565b600060208201905061039d6000830184610379565b92915050565b600082825260208201905092915050565b7f4c6f747465727920636c6f736564000000000000000000000000000000000000600082015250565b60006103ea600e836103a3565b91506103f5826103b4565b602082019050919050565b60006020820190508181036000830152610419816103dd565b9050919050565b7f56616c756520746f6f20736d616c6c0000000000000000000000000000000000600082015250565b6000610456600f836103a3565b915061046182610420565b602082019050919050565b6000602082019050818103600083015261048581610449565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104c6826102f7565b91506104d1836102f7565b9250828210156104e4576104e361048c565b5b82820390509291505056fea26469706673582212206c8db3472d26f49c04bd7487841331d1f3b1f1a00233fde44363d6e6da8ed63064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D5EE54 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x676C902F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x6FD09816 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBD85948C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD6FEBDE8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x13A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x173 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x2E6 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x327 DUP2 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x344 JUMPI PUSH2 0x343 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP6 DUP3 DUP7 ADD PUSH2 0x318 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x363 DUP6 DUP3 DUP7 ADD PUSH2 0x318 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x36D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F747465727920636C6F736564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA PUSH1 0xE DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5 DUP3 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x419 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH1 0xF DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x461 DUP3 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485 DUP2 PUSH2 0x449 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D1 DUP4 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x8DB3472D26F49C04BD74878413 BALANCE 0xD1 RETURN 0xB1 CALL LOG0 MUL CALLER REVERT 0xE4 NUMBER PUSH4 0xD6E6DA8E 0xD6 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "98:1427:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:44;;;;;;;;;;;;;:::i;:::-;;1363:30;;;;;;;;;;;;;:::i;:::-;;1227:80;;;;;;;;;;;;;:::i;:::-;;1399:124;;;;;;;;;;;;;:::i;:::-;;480:93;;;;;;;;;;;;;:::i;:::-;;579:642;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:44;:::o;1363:30::-;:::o;1227:80::-;:::o;1399:124::-;1452:4;1442:14;;:6;;;;;;;;;;;:14;;;1439:45;;1479:5;1470:6;;:14;;;;;;;;;;;;;;;;;;1439:45;1399:124::o;480:93::-;534:5;524:15;;:6;;;;;;;;;;;:15;;;521:45;;562:4;553:6;;:13;;;;;;;;;;;;;;;;;;521:45;480:93::o;579:642::-;647:4;681;671:14;;:6;;;;;;;;;;;:14;;;663:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;845:20;868:52;;;;;;;;886:8;868:52;;;;908:10;868:52;;;845:75;;952:6;930:7;:19;938:10;930:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;969:10;982:9;969:22;;1019:12;;1010:5;:21;;1002:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1112:12;;1104:5;:20;1101:91;;;1146:10;1138:28;;:54;1179:12;;1167:9;:24;;;;:::i;:::-;1138:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:91;1210:4;1203:11;;;;579:642;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:109::-;1347:21;1362:5;1347:21;:::i;:::-;1342:3;1335:34;1266:109;;:::o;1381:210::-;1468:4;1506:2;1495:9;1491:18;1483:26;;1519:65;1581:1;1570:9;1566:17;1557:6;1519:65;:::i;:::-;1381:210;;;;:::o;1597:169::-;1681:11;1715:6;1710:3;1703:19;1755:4;1750:3;1746:14;1731:29;;1597:169;;;;:::o;1772:164::-;1912:16;1908:1;1900:6;1896:14;1889:40;1772:164;:::o;1942:366::-;2084:3;2105:67;2169:2;2164:3;2105:67;:::i;:::-;2098:74;;2181:93;2270:3;2181:93;:::i;:::-;2299:2;2294:3;2290:12;2283:19;;1942:366;;;:::o;2314:419::-;2480:4;2518:2;2507:9;2503:18;2495:26;;2567:9;2561:4;2557:20;2553:1;2542:9;2538:17;2531:47;2595:131;2721:4;2595:131;:::i;:::-;2587:139;;2314:419;;;:::o;2739:165::-;2879:17;2875:1;2867:6;2863:14;2856:41;2739:165;:::o;2910:366::-;3052:3;3073:67;3137:2;3132:3;3073:67;:::i;:::-;3066:74;;3149:93;3238:3;3149:93;:::i;:::-;3267:2;3262:3;3258:12;3251:19;;2910:366;;;:::o;3282:419::-;3448:4;3486:2;3475:9;3471:18;3463:26;;3535:9;3529:4;3525:20;3521:1;3510:9;3506:17;3499:47;3563:131;3689:4;3563:131;:::i;:::-;3555:139;;3282:419;;;:::o;3707:180::-;3755:77;3752:1;3745:88;3852:4;3849:1;3842:15;3876:4;3873:1;3866:15;3893:191;3933:4;3953:20;3971:1;3953:20;:::i;:::-;3948:25;;3987:20;4005:1;3987:20;:::i;:::-;3982:25;;4026:1;4023;4020:8;4017:34;;;4031:18;;:::i;:::-;4017:34;4076:1;4073;4069:9;4061:17;;3893:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "263400",
								"executionCost": "46679",
								"totalCost": "310079"
							},
							"external": {
								"buy(uint256,uint256)": "infinite",
								"closeLottery()": "26626",
								"drawNumbers()": "166",
								"givePrizes()": "122",
								"mint()": "144",
								"startNewRound()": "26648"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1525,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 402,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 402,
									"end": 424,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 431,
									"end": 474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 454,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 454,
									"end": 467,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 454,
									"end": 467,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 454,
									"end": 467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1525,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c8db3472d26f49c04bd7487841331d1f3b1f1a00233fde44363d6e6da8ed63064736f6c634300080d0033",
									".code": [
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "6D5EE54"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "676C902F"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "6FD09816"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "BD85948C"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "D6FEBDE8"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1393,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1439,
											"end": 1484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1470,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1484,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1439,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1523,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 524,
											"end": 539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 524,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 524,
											"end": 530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 524,
											"end": 530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 524,
											"end": 539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 524,
											"end": 539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 524,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 521,
											"end": 566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 562,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 553,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 553,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 553,
											"end": 566,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 553,
											"end": 566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 521,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 671,
											"end": 685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 671,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 671,
											"end": 685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 671,
											"end": 685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 671,
											"end": 685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 894,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 918,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 868,
											"end": 920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 845,
											"end": 920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 948,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 930,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 991,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1031,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1112,
											"end": 1124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1101,
											"end": 1192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1179,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1179,
											"end": 1191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1167,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1101,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 1221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1347,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1519,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "4C6F747465727920636C6F736564000000000000000000000000000000000000"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1936,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2105,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2270,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2181,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2595,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "56616C756520746F6F20736D616C6C0000000000000000000000000000000000"
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2904,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3149,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3276,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3689,
											"end": 3693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3563,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3707,
											"end": 3887,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3707,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3842,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4028,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4017,
											"end": 4051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4051,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4017,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256,uint256)": "d6febde8",
							"closeLottery()": "6fd09816",
							"drawNumbers()": "676c902f",
							"givePrizes()": "06d5ee54",
							"mint()": "1249c58b",
							"startNewRound()": "bd85948c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numbers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_powerball\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"givePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol\":{\"keccak256\":\"0x31bc574feeca367bab32b741d6a6d727d0c58348885d861709be77f638c01c75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40d17fd02870979df79e84d5cf409374027db7ee324eb5b6ae8b888dfcfe76a\",\"dweb:/ipfs/QmXGg7wiTZNij1QgnY7UunxPoHQvXhJ3dbwZnXUrphKQZo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "NFTList",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 16,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "tickets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Ticket)6_storage)"
							},
							{
								"astId": 18,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "active",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 21,
								"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
								"label": "ticket_price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_struct(Ticket)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MyContract.Ticket)",
								"numberOfBytes": "32",
								"value": "t_struct(Ticket)6_storage"
							},
							"t_struct(Ticket)6_storage": {
								"encoding": "inplace",
								"label": "struct MyContract.Ticket",
								"members": [
									{
										"astId": 3,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "numbers",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol:MyContract",
										"label": "powerball",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "Desktop/P2P&BLOCKCHAIN/FinalTerm/contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "MyContract",
							"nameLocation": "107:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.Ticket",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "185:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "180:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "180:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "powerball",
											"nameLocation": "207:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "202:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "202:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "163:6:0",
									"nodeType": "StructDefinition",
									"scope": 128,
									"src": "156:67:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "NFTList",
									"nameLocation": "256:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "229:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "237:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "229:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "248:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 9,
											"nodeType": "ArrayTypeName",
											"src": "248:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "tickets",
									"nameLocation": "310:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "283:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
										"typeString": "mapping(address => struct MyContract.Ticket)"
									},
									"typeName": {
										"id": 15,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "291:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "283:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
											"typeString": "mapping(address => struct MyContract.Ticket)"
										},
										"valueType": {
											"id": 14,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 13,
												"name": "Ticket",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "302:6:0"
											},
											"referencedDeclaration": 6,
											"src": "302:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
												"typeString": "struct MyContract.Ticket"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "active",
									"nameLocation": "345:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "340:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 17,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "340:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "ticket_price",
									"nameLocation": "407:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "402:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "402:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "422:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "445:29:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "454:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "463:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "454:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "454:13:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:0:0"
									},
									"scope": 128,
									"src": "431:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "511:62:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "524:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "534:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "524:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "IfStatement",
												"src": "521:45:0",
												"trueBody": {
													"expression": {
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 35,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "553:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "562:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "553:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 38,
													"nodeType": "ExpressionStatement",
													"src": "553:13:0"
												}
											}
										]
									},
									"functionSelector": "bd85948c",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "489:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:0"
									},
									"scope": 128,
									"src": "480:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "652:569:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 51,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "671:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "681:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "671:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f747465727920636c6f736564",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "687:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															},
															"value": "Lottery closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07426f82be8deee2222c429269e3a939d956ffe9b6d663861d4affd71742806",
																"typeString": "literal_string \"Lottery closed\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "663:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "663:41:0"
											},
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "859:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "845:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket"
														},
														"typeName": {
															"id": 58,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 57,
																"name": "Ticket",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "845:6:0"
															},
															"referencedDeclaration": 6,
															"src": "845:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$6_storage_ptr",
																"typeString": "struct MyContract.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"arguments": [
														{
															"id": 61,
															"name": "_numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "886:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 62,
															"name": "_powerball",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "908:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 60,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "868:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$6_storage_ptr_$",
															"typeString": "type(struct MyContract.Ticket storage pointer)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"numbers",
														"powerball"
													],
													"nodeType": "FunctionCall",
													"src": "868:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
														"typeString": "struct MyContract.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "845:75:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$6_storage_$",
																"typeString": "mapping(address => struct MyContract.Ticket storage ref)"
															}
														},
														"id": 68,
														"indexExpression": {
															"expression": {
																"id": 66,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "938:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "938:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "930:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_storage",
															"typeString": "struct MyContract.Ticket storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "952:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$6_memory_ptr",
															"typeString": "struct MyContract.Ticket memory"
														}
													},
													"src": "930:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$6_storage",
														"typeString": "struct MyContract.Ticket storage ref"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "930:28:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "974:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "969:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 72,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "969:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"expression": {
														"id": 74,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "982:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "982:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "969:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 78,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1010:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 79,
																"name": "ticket_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1019:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1010:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56616c756520746f6f20736d616c6c",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1033:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															},
															"value": "Value too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc81d676425fc0b81a6093c6d1ff1b2fcc09e98b66112253f712bca4cb515dc9",
																"typeString": "literal_string \"Value too small\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1002:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 84,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1104:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 85,
														"name": "ticket_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1112:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1104:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "IfStatement",
												"src": "1101:91:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 93,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1167:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1167:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 95,
																	"name": "ticket_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1179:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1167:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 89,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1146:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1146:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1138:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1138:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1138:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "1138:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1138:54:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 98,
													"nodeType": "ExpressionStatement",
													"src": "1138:54:0"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1210:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 49,
												"id": 101,
												"nodeType": "Return",
												"src": "1203:11:0"
											}
										]
									},
									"functionSelector": "d6febde8",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "588:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_numbers",
												"nameLocation": "597:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "592:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_powerball",
												"nameLocation": "612:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "607:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "607:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:32:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "647:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:6:0"
									},
									"scope": 128,
									"src": "579:642:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1256:51:0",
										"statements": []
									},
									"functionSelector": "676c902f",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drawNumbers",
									"nameLocation": "1236:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1247:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:0:0"
									},
									"scope": 128,
									"src": "1227:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1341:16:0",
										"statements": []
									},
									"functionSelector": "06d5ee54",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givePrizes",
									"nameLocation": "1322:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:0:0"
									},
									"scope": 128,
									"src": "1313:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "1385:8:0",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1372:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1376:2:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:0:0"
									},
									"scope": 128,
									"src": "1363:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1429:94:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 118,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1442:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1452:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1442:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "IfStatement",
												"src": "1439:45:0",
												"trueBody": {
													"expression": {
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 121,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "66616c7365",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "1470:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 124,
													"nodeType": "ExpressionStatement",
													"src": "1470:14:0"
												}
											}
										]
									},
									"functionSelector": "6fd09816",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closeLottery",
									"nameLocation": "1408:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:0:0"
									},
									"scope": 128,
									"src": "1399:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 129,
							"src": "98:1427:0",
							"usedErrors": []
						}
					],
					"src": "32:1494:0"
				},
				"id": 0
			}
		}
	}
}